server.port=8200
server.environment.cloud=false
spring.application.name=database-restoration-service

### Kafka
kafka.consumer.groupId=database-restoration-service-group
kafka.consumer.backoff.enabled=true
kafka.consumer.backoff.type=FIXED
kafka.consumer.deadletter.enabled=true
kafka.consumer.max-poll-interval-ms=5000

### Eureka
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/

### Actuator
management.endpoints.web.exposure.include=health,info

### Commands for domain logic
command.create-database=createdb -h {0} -p {1} -U {2} --no-password -T template0 {3}
command.drop-database=dropdb -h {0} -p {1} -U {2} --no-password --if-exists {3}
command.exists-database=psql -h {0} -p {1} -U {2} -t -c "SELECT 1 FROM pg_database WHERE datname=''{3}'';"
command.restore-dump.from-archive=pg_restore -h {0} -p {1} -U {2} -d {3} -v
command.restore-dump.from-script=psql -h {0} -p {1} -U {2} -d {3} -v ON_ERROR_STOP=1 --echo-all

### Timeouts for commands
command.create-database.timeout=30
command.drop-database.timeout=30
command.exists-database.timeout=30
command.restore-dump.timeout=120

### Configuration for restorations connection
restoration.db.host=postgres
restoration.db.password=postgres
restoration.db.port=5432
restoration.db.username=postgres

### MongoDB
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
spring.data.mongodb.database=RESTORATIONS_DB
spring.data.mongodb.username=RESTORATIONS_USER
spring.data.mongodb.password=RESTORATIONS_PASSWORD

### REST Logging
logging.filter.request.enabled=true
logging.filter.response.enabled=true
