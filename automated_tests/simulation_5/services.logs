simulation_5-blueprint-service-1  | Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
simulation_5-blueprint-service-1  | 14:10:21,338 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: connection failed. java.net.ConnectException: Connection refused
simulation_5-blueprint-service-1  | 	at java.net.ConnectException: Connection refused
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
simulation_5-blueprint-service-1  | 	at 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
simulation_5-blueprint-service-1  | 	at 	at java.base/java.net.Socket.connect(Socket.java:633)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.openSocket(AbstractLogstashTcpSocketAppender.java:765)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.onStart(AbstractLogstashTcpSocketAppender.java:691)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AsyncDisruptorAppender$EventClearingEventHandler.onStart(AsyncDisruptorAppender.java:382)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.notifyStart(BatchEventProcessor.java:224)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:120)
simulation_5-blueprint-service-1  | 	at 	at java.base/java.lang.Thread.run(Thread.java:833)
simulation_5-blueprint-service-1  | 14:10:21,343 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: Waiting 29935ms before attempting reconnection.
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  |   .   ____          _            __ _ _
simulation_5-blueprint-service-1  |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
simulation_5-blueprint-service-1  | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
simulation_5-blueprint-service-1  |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
simulation_5-blueprint-service-1  |   '  |____| .__|_| |_|_| |_\__, | / / / /
simulation_5-blueprint-service-1  |  =========|_|==============|___/=/_/_/_/
simulation_5-blueprint-service-1  |  :: Spring Boot ::                (v3.2.0)
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:21 [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:22 [main] c.w.a.b.BlueprintServiceApplication - Starting BlueprintServiceApplication vsimulation-5 using Java 17.0.2 with PID 1 (/app.jar started by root in /)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:22 [main] c.w.a.b.BlueprintServiceApplication - No active profile set, falling back to 1 default profile: "default"
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:29 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:29 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 304 ms. Found 1 MongoDB repository interface.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:31 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:31 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 0 Reactive MongoDB repository interfaces.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:33 [main] o.s.cloud.context.scope.GenericScope - BeanFactory id=dc475460-e34f-35f0-8598-2447659860c4
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:33 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:33 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:33 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:33 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$679/0x0000000801091500] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:34 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:35 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8100 (http)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:35 [main] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8100"]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:35 [main] o.a.catalina.core.StandardService - Starting service [Tomcat]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:35 [main] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:35 [main] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:35 [main] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 11913 ms
simulation_5-blueprint-service-1  | Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:39 [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='BLUEPRINTS_USER', source='BLUEPRINTS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@79445efb, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@b841713], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1592e540, com.mongodb.Jep395RecordCodecProvider@3e2772a9, com.mongodb.KotlinCodecProvider@4449b273]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@40538370], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:40 [cluster-ClusterId{value='65b7b1df0846020279749ce1', description='null'}-mongodb:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=207351166}
simulation_5-blueprint-service-1  | 14:10:51,307 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: connection failed. java.net.ConnectException: Connection refused
simulation_5-blueprint-service-1  | 	at java.net.ConnectException: Connection refused
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
simulation_5-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
simulation_5-blueprint-service-1  | 	at 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
simulation_5-blueprint-service-1  | 	at 	at java.base/java.net.Socket.connect(Socket.java:633)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.openSocket(AbstractLogstashTcpSocketAppender.java:765)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.onStart(AbstractLogstashTcpSocketAppender.java:691)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AsyncDisruptorAppender$EventClearingEventHandler.onStart(AsyncDisruptorAppender.java:382)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.notifyStart(BatchEventProcessor.java:224)
simulation_5-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:120)
simulation_5-blueprint-service-1  | 	at 	at java.base/java.lang.Thread.run(Thread.java:833)
simulation_5-blueprint-service-1  | 14:10:51,351 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: Waiting 29929ms before attempting reconnection.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: dead-letter
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: created-blueprint
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution-success
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution-failure
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: restore-success
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: restore-failure
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: operations
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: load-success
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: load-failure
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: extraction-success
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: extraction-failure
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-anonymize-success
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-anonymize-failure
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-script-success
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-script-failure
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:54 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: created-worksheet
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:55 [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='BLUEPRINTS_USER', source='BLUEPRINTS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@1e7797db, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@b841713], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1592e540, com.mongodb.Jep395RecordCodecProvider@3e2772a9, com.mongodb.KotlinCodecProvider@4449b273]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@40538370], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:55 [cluster-ClusterId{value='65b7b1ee0846020279749ce2', description='null'}-mongodb:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=105026750}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:57 [main] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:10:57 [main] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:57 [main] o.s.b.a.e.web.EndpointLinksResolver - Exposing 17 endpoint(s) beneath base path '/actuator'
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:59 [main] o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
simulation_5-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_5-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_5-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_5-blueprint-service-1  | 	client.id = 
simulation_5-blueprint-service-1  | 	connections.max.idle.ms = 300000
simulation_5-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_5-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_5-blueprint-service-1  | 	metric.reporters = []
simulation_5-blueprint-service-1  | 	metrics.num.samples = 2
simulation_5-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_5-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_5-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_5-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_5-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_5-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_5-blueprint-service-1  | 	retries = 2147483647
simulation_5-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.jaas.config = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_5-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_5-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.login.class = null
simulation_5-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_5-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_5-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_5-blueprint-service-1  | 	security.providers = null
simulation_5-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_5-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_5-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_5-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_5-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_5-blueprint-service-1  | 	ssl.key.password = null
simulation_5-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_5-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_5-blueprint-service-1  | 	ssl.keystore.key = null
simulation_5-blueprint-service-1  | 	ssl.keystore.location = null
simulation_5-blueprint-service-1  | 	ssl.keystore.password = null
simulation_5-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_5-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_5-blueprint-service-1  | 	ssl.provider = null
simulation_5-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_5-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_5-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_5-blueprint-service-1  | 	ssl.truststore.location = null
simulation_5-blueprint-service-1  | 	ssl.truststore.password = null
simulation_5-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:59 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:59 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:10:59 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537459488
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:00 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:00 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:00 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:00 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Metrics reporters closed
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:00 [main] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Disable delta property : false
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Application is null : false
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Application version is -1: true
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:01 [main] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] c.netflix.discovery.DiscoveryClient - The response status is 200
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1706537462409 with initial instances count: 3
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.s.c.n.e.s.EurekaServiceRegistry - Registering application BLUEPRINT-SERVICE with eureka with status UP
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1706537462419, current=UP, previous=STARTING]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_BLUEPRINT-SERVICE/d8f94e284a4f:blueprint-service:8100: registering service...
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8100"]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_BLUEPRINT-SERVICE/d8f94e284a4f:blueprint-service:8100 - registration status: 204
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8100 (http) with context path ''
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8100
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_5-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_5-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_5-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_5-blueprint-service-1  | 	auto.offset.reset = latest
simulation_5-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_5-blueprint-service-1  | 	check.crcs = true
simulation_5-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_5-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-1
simulation_5-blueprint-service-1  | 	client.rack = 
simulation_5-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_5-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_5-blueprint-service-1  | 	enable.auto.commit = false
simulation_5-blueprint-service-1  | 	exclude.internal.topics = true
simulation_5-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_5-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_5-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_5-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_5-blueprint-service-1  | 	group.instance.id = null
simulation_5-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_5-blueprint-service-1  | 	interceptor.classes = []
simulation_5-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_5-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_5-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_5-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_5-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_5-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_5-blueprint-service-1  | 	max.poll.records = 500
simulation_5-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_5-blueprint-service-1  | 	metric.reporters = []
simulation_5-blueprint-service-1  | 	metrics.num.samples = 2
simulation_5-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_5-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_5-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_5-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_5-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_5-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_5-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_5-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.jaas.config = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_5-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_5-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.login.class = null
simulation_5-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_5-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_5-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_5-blueprint-service-1  | 	security.providers = null
simulation_5-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_5-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_5-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_5-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_5-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_5-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_5-blueprint-service-1  | 	ssl.key.password = null
simulation_5-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_5-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_5-blueprint-service-1  | 	ssl.keystore.key = null
simulation_5-blueprint-service-1  | 	ssl.keystore.location = null
simulation_5-blueprint-service-1  | 	ssl.keystore.password = null
simulation_5-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_5-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_5-blueprint-service-1  | 	ssl.provider = null
simulation_5-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_5-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_5-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_5-blueprint-service-1  | 	ssl.truststore.location = null
simulation_5-blueprint-service-1  | 	ssl.truststore.password = null
simulation_5-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_5-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537462952
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:02 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Subscribed to topic(s): metadata-success
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_5-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_5-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_5-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_5-blueprint-service-1  | 	auto.offset.reset = latest
simulation_5-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_5-blueprint-service-1  | 	check.crcs = true
simulation_5-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_5-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-2
simulation_5-blueprint-service-1  | 	client.rack = 
simulation_5-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_5-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_5-blueprint-service-1  | 	enable.auto.commit = false
simulation_5-blueprint-service-1  | 	exclude.internal.topics = true
simulation_5-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_5-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_5-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_5-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_5-blueprint-service-1  | 	group.instance.id = null
simulation_5-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_5-blueprint-service-1  | 	interceptor.classes = []
simulation_5-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_5-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_5-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_5-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_5-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_5-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_5-blueprint-service-1  | 	max.poll.records = 500
simulation_5-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_5-blueprint-service-1  | 	metric.reporters = []
simulation_5-blueprint-service-1  | 	metrics.num.samples = 2
simulation_5-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_5-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_5-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_5-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_5-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_5-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_5-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_5-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.jaas.config = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_5-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_5-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.login.class = null
simulation_5-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_5-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_5-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_5-blueprint-service-1  | 	security.providers = null
simulation_5-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_5-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_5-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_5-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_5-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_5-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_5-blueprint-service-1  | 	ssl.key.password = null
simulation_5-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_5-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_5-blueprint-service-1  | 	ssl.keystore.key = null
simulation_5-blueprint-service-1  | 	ssl.keystore.location = null
simulation_5-blueprint-service-1  | 	ssl.keystore.password = null
simulation_5-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_5-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_5-blueprint-service-1  | 	ssl.provider = null
simulation_5-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_5-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_5-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_5-blueprint-service-1  | 	ssl.truststore.location = null
simulation_5-blueprint-service-1  | 	ssl.truststore.password = null
simulation_5-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_5-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537463023
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Subscribed to topic(s): metadata-failure
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_5-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_5-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_5-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_5-blueprint-service-1  | 	auto.offset.reset = latest
simulation_5-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_5-blueprint-service-1  | 	check.crcs = true
simulation_5-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_5-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-3
simulation_5-blueprint-service-1  | 	client.rack = 
simulation_5-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_5-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_5-blueprint-service-1  | 	enable.auto.commit = false
simulation_5-blueprint-service-1  | 	exclude.internal.topics = true
simulation_5-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_5-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_5-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_5-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_5-blueprint-service-1  | 	group.instance.id = null
simulation_5-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_5-blueprint-service-1  | 	interceptor.classes = []
simulation_5-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_5-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_5-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_5-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_5-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_5-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_5-blueprint-service-1  | 	max.poll.records = 500
simulation_5-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_5-blueprint-service-1  | 	metric.reporters = []
simulation_5-blueprint-service-1  | 	metrics.num.samples = 2
simulation_5-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_5-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_5-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_5-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_5-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_5-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_5-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_5-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.jaas.config = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_5-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_5-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.login.class = null
simulation_5-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_5-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_5-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_5-blueprint-service-1  | 	security.providers = null
simulation_5-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_5-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_5-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_5-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_5-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_5-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_5-blueprint-service-1  | 	ssl.key.password = null
simulation_5-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_5-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_5-blueprint-service-1  | 	ssl.keystore.key = null
simulation_5-blueprint-service-1  | 	ssl.keystore.location = null
simulation_5-blueprint-service-1  | 	ssl.keystore.password = null
simulation_5-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_5-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_5-blueprint-service-1  | 	ssl.provider = null
simulation_5-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_5-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_5-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_5-blueprint-service-1  | 	ssl.truststore.location = null
simulation_5-blueprint-service-1  | 	ssl.truststore.password = null
simulation_5-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_5-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537463043
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Subscribed to topic(s): created-blueprint-listen-to-yourself
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_5-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_5-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_5-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_5-blueprint-service-1  | 	auto.offset.reset = latest
simulation_5-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_5-blueprint-service-1  | 	check.crcs = true
simulation_5-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_5-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-4
simulation_5-blueprint-service-1  | 	client.rack = 
simulation_5-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_5-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_5-blueprint-service-1  | 	enable.auto.commit = false
simulation_5-blueprint-service-1  | 	exclude.internal.topics = true
simulation_5-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_5-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_5-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_5-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_5-blueprint-service-1  | 	group.instance.id = null
simulation_5-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_5-blueprint-service-1  | 	interceptor.classes = []
simulation_5-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_5-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_5-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_5-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_5-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_5-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_5-blueprint-service-1  | 	max.poll.records = 500
simulation_5-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_5-blueprint-service-1  | 	metric.reporters = []
simulation_5-blueprint-service-1  | 	metrics.num.samples = 2
simulation_5-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_5-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_5-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_5-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_5-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_5-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_5-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_5-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.jaas.config = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_5-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_5-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.login.class = null
simulation_5-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_5-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_5-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_5-blueprint-service-1  | 	security.providers = null
simulation_5-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_5-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_5-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_5-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_5-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_5-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_5-blueprint-service-1  | 	ssl.key.password = null
simulation_5-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_5-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_5-blueprint-service-1  | 	ssl.keystore.key = null
simulation_5-blueprint-service-1  | 	ssl.keystore.location = null
simulation_5-blueprint-service-1  | 	ssl.keystore.password = null
simulation_5-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_5-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_5-blueprint-service-1  | 	ssl.provider = null
simulation_5-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_5-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_5-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_5-blueprint-service-1  | 	ssl.truststore.location = null
simulation_5-blueprint-service-1  | 	ssl.truststore.password = null
simulation_5-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_5-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537463131
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Subscribed to topic(s): restore-success
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Error while fetching metadata with correlation id 2 : {metadata-success=LEADER_NOT_AVAILABLE}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_5-blueprint-service-1  | [31mWARN [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Error while fetching metadata with correlation id 2 : {created-blueprint-listen-to-yourself=LEADER_NOT_AVAILABLE}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_5-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_5-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_5-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_5-blueprint-service-1  | 	auto.offset.reset = latest
simulation_5-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_5-blueprint-service-1  | 	check.crcs = true
simulation_5-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_5-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-5
simulation_5-blueprint-service-1  | 	client.rack = 
simulation_5-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_5-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_5-blueprint-service-1  | 	enable.auto.commit = false
simulation_5-blueprint-service-1  | 	exclude.internal.topics = true
simulation_5-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_5-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_5-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_5-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_5-blueprint-service-1  | 	group.instance.id = null
simulation_5-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_5-blueprint-service-1  | 	interceptor.classes = []
simulation_5-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_5-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_5-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_5-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_5-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_5-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_5-blueprint-service-1  | 	max.poll.records = 500
simulation_5-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_5-blueprint-service-1  | 	metric.reporters = []
simulation_5-blueprint-service-1  | 	metrics.num.samples = 2
simulation_5-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_5-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_5-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_5-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_5-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_5-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_5-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_5-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.jaas.config = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_5-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_5-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.login.class = null
simulation_5-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_5-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_5-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_5-blueprint-service-1  | 	security.providers = null
simulation_5-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_5-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_5-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_5-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_5-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_5-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_5-blueprint-service-1  | 	ssl.key.password = null
simulation_5-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_5-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_5-blueprint-service-1  | 	ssl.keystore.key = null
simulation_5-blueprint-service-1  | 	ssl.keystore.location = null
simulation_5-blueprint-service-1  | 	ssl.keystore.password = null
simulation_5-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_5-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_5-blueprint-service-1  | 	ssl.provider = null
simulation_5-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_5-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_5-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_5-blueprint-service-1  | 	ssl.truststore.location = null
simulation_5-blueprint-service-1  | 	ssl.truststore.password = null
simulation_5-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_5-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537463192
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Subscribed to topic(s): restore-failure
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-4-aeb4f73f-37b8-4660-8ff2-30268fa60797
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-3-eecfadf2-2b6f-4584-80a7-a08a66a6ded0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-2-3579201b-0eca-4093-9797-1196ac06c027
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-1-c37b9ac4-264a-4b63-8b42-3bb1e99d57fb
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-blueprint-service-group-3-eecfadf2-2b6f-4584-80a7-a08a66a6ded0', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-blueprint-service-group-4-aeb4f73f-37b8-4660-8ff2-30268fa60797', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-5-d4a61035-25c7-440c-a40d-2f4d42ee5c81
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-blueprint-service-group-3-eecfadf2-2b6f-4584-80a7-a08a66a6ded0', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Finished assignment for group at generation 1: {consumer-blueprint-service-group-4-aeb4f73f-37b8-4660-8ff2-30268fa60797=Assignment(partitions=[restore-success-0]), consumer-blueprint-service-group-3-eecfadf2-2b6f-4584-80a7-a08a66a6ded0=Assignment(partitions=[created-blueprint-listen-to-yourself-0])}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=1, memberId='consumer-blueprint-service-group-4-aeb4f73f-37b8-4660-8ff2-30268fa60797', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] (Re-)joining group
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-blueprint-service-group-3-eecfadf2-2b6f-4584-80a7-a08a66a6ded0', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-blueprint-service-group-5-d4a61035-25c7-440c-a40d-2f4d42ee5c81', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-blueprint-service-group-1-c37b9ac4-264a-4b63-8b42-3bb1e99d57fb', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-blueprint-service-group-2-3579201b-0eca-4093-9797-1196ac06c027', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-blueprint-service-group-4-aeb4f73f-37b8-4660-8ff2-30268fa60797', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Finished assignment for group at generation 2: {consumer-blueprint-service-group-4-aeb4f73f-37b8-4660-8ff2-30268fa60797=Assignment(partitions=[restore-success-0]), consumer-blueprint-service-group-5-d4a61035-25c7-440c-a40d-2f4d42ee5c81=Assignment(partitions=[restore-failure-0]), consumer-blueprint-service-group-1-c37b9ac4-264a-4b63-8b42-3bb1e99d57fb=Assignment(partitions=[metadata-success-0]), consumer-blueprint-service-group-2-3579201b-0eca-4093-9797-1196ac06c027=Assignment(partitions=[metadata-failure-0]), consumer-blueprint-service-group-3-eecfadf2-2b6f-4584-80a7-a08a66a6ded0=Assignment(partitions=[created-blueprint-listen-to-yourself-0])}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-blueprint-service-group-1-c37b9ac4-264a-4b63-8b42-3bb1e99d57fb', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-blueprint-service-group-2-3579201b-0eca-4093-9797-1196ac06c027', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[metadata-failure-0])
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-blueprint-service-group-3-eecfadf2-2b6f-4584-80a7-a08a66a6ded0', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[created-blueprint-listen-to-yourself-0])
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[metadata-success-0])
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-blueprint-service-group-5-d4a61035-25c7-440c-a40d-2f4d42ee5c81', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[restore-failure-0])
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [kafka-coordinator-heartbeat-thread | blueprint-service-group] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-blueprint-service-group-4-aeb4f73f-37b8-4660-8ff2-30268fa60797', protocol='range'}
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[restore-success-0])
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Adding newly assigned partitions: restore-success-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Adding newly assigned partitions: created-blueprint-listen-to-yourself-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Adding newly assigned partitions: restore-failure-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Adding newly assigned partitions: metadata-failure-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Adding newly assigned partitions: metadata-success-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Found no committed offset for partition restore-failure-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Found no committed offset for partition restore-success-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Found no committed offset for partition metadata-failure-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Found no committed offset for partition created-blueprint-listen-to-yourself-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Found no committed offset for partition restore-failure-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Found no committed offset for partition created-blueprint-listen-to-yourself-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Found no committed offset for partition metadata-failure-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Resetting offset for partition created-blueprint-listen-to-yourself-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [main] c.w.a.b.BlueprintServiceApplication - Started BlueprintServiceApplication in 50.575 seconds (process running for 55.785)
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Found no committed offset for partition metadata-success-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Found no committed offset for partition metadata-success-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Resetting offset for partition restore-failure-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Found no committed offset for partition restore-success-0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Resetting offset for partition metadata-success-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Resetting offset for partition metadata-failure-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Resetting offset for partition restore-success-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [restore-failure-0]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [restore-success-0]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [created-blueprint-listen-to-yourself-0]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [metadata-failure-0]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:03 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [metadata-success-0]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:07 [http-nio-8100-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:07 [http-nio-8100-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:07 [http-nio-8100-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:41:30.020738003
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [http-nio-8100-exec-8] c.w.a.logging.LoggingFilter - -----> Request: POST /api/v1/importing/start, headers=[user-agent:"curl/8.1.2", accept:"*/*", content-length:"3584", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:55334"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"d8f94e284a4f:8100", Content-Type:"multipart/form-data;boundary=------------------------666036f483036fdd;charset=UTF-8"]
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [http-nio-8100-exec-8] c.w.a.logging.LoggingFilter - <----- Response (HTTP 202 Accepted): 14547f69-4549-4f2d-9f0e-d4480cebddf9
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] c.w.a.s.impl.LoggingKafkaTemplate - Publishing to Kafka | Topic: created-blueprint-listen-to-yourself | Value: BlueprintInstantiatedEvent(blueprint=Blueprint(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9, dumpFile=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6cd59919, blueprintSagaStatus=INITIALISED, restoreMode=SCRIPT, databaseType=POSTGRESQL, title=Employees, dumpStoreSuccess=false, description=This is just a sample dump of employees database made in a SCRIPT mode., createdDate=2024-01-29T14:11:39.834176008, originalDumpName=employeesdb_script.sql))
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
simulation_5-blueprint-service-1  | 	acks = -1
simulation_5-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_5-blueprint-service-1  | 	batch.size = 16384
simulation_5-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_5-blueprint-service-1  | 	buffer.memory = 33554432
simulation_5-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_5-blueprint-service-1  | 	client.id = producer-1
simulation_5-blueprint-service-1  | 	compression.type = none
simulation_5-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_5-blueprint-service-1  | 	delivery.timeout.ms = 120000
simulation_5-blueprint-service-1  | 	enable.idempotence = true
simulation_5-blueprint-service-1  | 	interceptor.classes = []
simulation_5-blueprint-service-1  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
simulation_5-blueprint-service-1  | 	linger.ms = 0
simulation_5-blueprint-service-1  | 	max.block.ms = 60000
simulation_5-blueprint-service-1  | 	max.in.flight.requests.per.connection = 5
simulation_5-blueprint-service-1  | 	max.request.size = 1048576
simulation_5-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_5-blueprint-service-1  | 	metadata.max.idle.ms = 300000
simulation_5-blueprint-service-1  | 	metric.reporters = []
simulation_5-blueprint-service-1  | 	metrics.num.samples = 2
simulation_5-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_5-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_5-blueprint-service-1  | 	partitioner.adaptive.partitioning.enable = true
simulation_5-blueprint-service-1  | 	partitioner.availability.timeout.ms = 0
simulation_5-blueprint-service-1  | 	partitioner.class = null
simulation_5-blueprint-service-1  | 	partitioner.ignore.keys = false
simulation_5-blueprint-service-1  | 	receive.buffer.bytes = 32768
simulation_5-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_5-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_5-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_5-blueprint-service-1  | 	retries = 2147483647
simulation_5-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.jaas.config = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_5-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_5-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_5-blueprint-service-1  | 	sasl.login.class = null
simulation_5-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_5-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_5-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_5-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_5-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_5-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_5-blueprint-service-1  | 	security.providers = null
simulation_5-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_5-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_5-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_5-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_5-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_5-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_5-blueprint-service-1  | 	ssl.key.password = null
simulation_5-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_5-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_5-blueprint-service-1  | 	ssl.keystore.key = null
simulation_5-blueprint-service-1  | 	ssl.keystore.location = null
simulation_5-blueprint-service-1  | 	ssl.keystore.password = null
simulation_5-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_5-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_5-blueprint-service-1  | 	ssl.provider = null
simulation_5-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_5-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_5-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_5-blueprint-service-1  | 	ssl.truststore.location = null
simulation_5-blueprint-service-1  | 	ssl.truststore.password = null
simulation_5-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_5-blueprint-service-1  | 	transaction.timeout.ms = 60000
simulation_5-blueprint-service-1  | 	transactional.id = null
simulation_5-blueprint-service-1  | 	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537499963
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:39 [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
simulation_5-blueprint-service-1  | [1;31mERROR[0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] c.w.a.s.api.ShutdownSimulator - @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
simulation_5-blueprint-service-1  | [1;31mERROR[0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] c.w.a.s.api.ShutdownSimulator - Crashing JVM to simulate service failure...
simulation_5-blueprint-service-1  | [1;31mERROR[0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] c.w.a.s.api.ShutdownSimulator - @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
simulation_5-blueprint-service-1  | [1;31mERROR[0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] c.w.a.s.api.ShutdownSimulator - Simulation purpose: Simulating service crash after the event is produced
simulation_5-blueprint-service-1  | [1;31mERROR[0;39m 2024-01-29 14:11:39 [ForkJoinPool.commonPool-worker-1] c.w.a.s.api.ShutdownSimulator - @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
simulation_5-blueprint-service-1  | #
simulation_5-blueprint-service-1  | # A fatal error has been detected by the Java Runtime Environment:
simulation_5-blueprint-service-1  | #
simulation_5-blueprint-service-1  | #  SIGSEGV (0xb) at pc=0x0000ffff9f9c6fcc, pid=1, tid=100
simulation_5-blueprint-service-1  | #
simulation_5-blueprint-service-1  | # JRE version: OpenJDK Runtime Environment (17.0.2+8) (build 17.0.2+8-86)
simulation_5-blueprint-service-1  | # Java VM: OpenJDK 64-Bit Server VM (17.0.2+8-86, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)
simulation_5-blueprint-service-1  | # Problematic frame:
simulation_5-blueprint-service-1  | # V  [libjvm.so+0xcd1fcc]  Unsafe_PutLong+0x11c
simulation_5-blueprint-service-1  | #
simulation_5-blueprint-service-1  | # No core dump will be written. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
simulation_5-blueprint-service-1  | #
simulation_5-blueprint-service-1  | # An error report file with more information is saved as:
simulation_5-blueprint-service-1  | # //hs_err_pid1.log
simulation_5-blueprint-service-1  | [34mINFO [0;39m 2024-01-29 14:11:40 [kafka-producer-network-thread | producer-1] o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
simulation_5-blueprint-service-1  | Compiled method (n/a)   92118  882     n 0       jdk.internal.misc.Unsafe::putLong (native)
simulation_5-blueprint-service-1  |  total in heap  [0x0000ffff89211d10,0x0000ffff89212060] = 848
simulation_5-blueprint-service-1  |  relocation     [0x0000ffff89211e68,0x0000ffff89211e98] = 48
simulation_5-blueprint-service-1  |  main code      [0x0000ffff89211ec0,0x0000ffff89212058] = 408
simulation_5-blueprint-service-1  |  metadata       [0x0000ffff89212058,0x0000ffff89212060] = 8
simulation_5-blueprint-service-1  | Compiled method (n/a)   92119  882     n 0       jdk.internal.misc.Unsafe::putLong (native)
simulation_5-blueprint-service-1  |  total in heap  [0x0000ffff89211d10,0x0000ffff89212060] = 848
simulation_5-blueprint-service-1  |  relocation     [0x0000ffff89211e68,0x0000ffff89211e98] = 48
simulation_5-blueprint-service-1  |  main code      [0x0000ffff89211ec0,0x0000ffff89212058] = 408
simulation_5-blueprint-service-1  |  metadata       [0x0000ffff89212058,0x0000ffff89212060] = 8
simulation_5-blueprint-service-1  | #
simulation_5-blueprint-service-1  | # If you would like to submit a bug report, please visit:
simulation_5-blueprint-service-1  | #   https://bugreport.java.com/bugreport/crash.jsp
simulation_5-blueprint-service-1  | #
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1  | [error occurred during error reporting (), id 0x5, SIGTRAP (0x5) at pc=0x0000ffff9ff04f64]
simulation_5-blueprint-service-1  | 
simulation_5-blueprint-service-1 exited with code 127
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

[34mINFO [0;39m 2024-01-29 14:11:47 [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
[34mINFO [0;39m 2024-01-29 14:11:47 [main] c.w.a.b.BlueprintServiceApplication - Starting BlueprintServiceApplication vsimulation-5 using Java 17.0.2 with PID 1 (/app.jar started by root in /)
[34mINFO [0;39m 2024-01-29 14:11:47 [main] c.w.a.b.BlueprintServiceApplication - No active profile set, falling back to 1 default profile: "default"
[34mINFO [0;39m 2024-01-29 14:11:48 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
[34mINFO [0;39m 2024-01-29 14:11:48 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 105 ms. Found 1 MongoDB repository interface.
[34mINFO [0;39m 2024-01-29 14:11:48 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
[34mINFO [0;39m 2024-01-29 14:11:48 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive MongoDB repository interfaces.
[34mINFO [0;39m 2024-01-29 14:11:48 [main] o.s.cloud.context.scope.GenericScope - BeanFactory id=dc475460-e34f-35f0-8598-2447659860c4
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$681/0x00000008010b7588] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[31mWARN [0;39m 2024-01-29 14:11:48 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
[34mINFO [0;39m 2024-01-29 14:11:49 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8100 (http)
[34mINFO [0;39m 2024-01-29 14:11:49 [main] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8100"]
[34mINFO [0;39m 2024-01-29 14:11:49 [main] o.a.catalina.core.StandardService - Starting service [Tomcat]
[34mINFO [0;39m 2024-01-29 14:11:49 [main] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
[34mINFO [0;39m 2024-01-29 14:11:49 [main] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[34mINFO [0;39m 2024-01-29 14:11:49 [main] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1647 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
[34mINFO [0;39m 2024-01-29 14:11:49 [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='BLUEPRINTS_USER', source='BLUEPRINTS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@93f15f6, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1530d0f2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5034681f, com.mongodb.Jep395RecordCodecProvider@1dfe5dd1, com.mongodb.KotlinCodecProvider@1fe05fff]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7d977a20], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
[34mINFO [0;39m 2024-01-29 14:11:49 [cluster-ClusterId{value='65b7b225450f552442f761f0', description='null'}-mongodb:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42945709}
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: dead-letter
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: created-blueprint
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution-success
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution-failure
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: restore-success
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: restore-failure
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: operations
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: load-success
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: load-failure
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: extraction-success
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: extraction-failure
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-anonymize-success
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-anonymize-failure
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-script-success
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-script-failure
[31mWARN [0;39m 2024-01-29 14:11:50 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: created-worksheet
[34mINFO [0;39m 2024-01-29 14:11:50 [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='BLUEPRINTS_USER', source='BLUEPRINTS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3792fed8, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@1530d0f2], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5034681f, com.mongodb.Jep395RecordCodecProvider@1dfe5dd1, com.mongodb.KotlinCodecProvider@1fe05fff]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@7d977a20], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
[34mINFO [0;39m 2024-01-29 14:11:50 [cluster-ClusterId{value='65b7b226450f552442f761f1', description='null'}-mongodb:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32037125}
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
[31mWARN [0;39m 2024-01-29 14:11:51 [main] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.s.b.a.e.web.EndpointLinksResolver - Exposing 17 endpoint(s) beneath base path '/actuator'
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.a.k.c.admin.AdminClientConfig - AdminClientConfig values:
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9093]
	client.dns.lookup = use_all_dns_ips
	client.id =
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537511292
[34mINFO [0;39m 2024-01-29 14:11:51 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
[34mINFO [0;39m 2024-01-29 14:11:51 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
[34mINFO [0;39m 2024-01-29 14:11:51 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
[34mINFO [0;39m 2024-01-29 14:11:51 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Metrics reporters closed
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Disable delta property : false
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Application is null : false
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Application version is -1: true
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - The response status is 200
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1706537511927 with initial instances count: 5
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.s.c.n.e.s.EurekaServiceRegistry - Registering application BLUEPRINT-SERVICE with eureka with status UP
[34mINFO [0;39m 2024-01-29 14:11:51 [main] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1706537511930, current=UP, previous=STARTING]
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8100"]
[34mINFO [0;39m 2024-01-29 14:11:51 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_BLUEPRINT-SERVICE/41591d03f97a:blueprint-service:8100: registering service...
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8100 (http) with context path ''
[34mINFO [0;39m 2024-01-29 14:11:51 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_BLUEPRINT-SERVICE/41591d03f97a:blueprint-service:8100 - registration status: 204
[34mINFO [0;39m 2024-01-29 14:11:51 [main] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8100
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values:
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [kafka:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-blueprint-service-group-1
	client.rack =
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = blueprint-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 90000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537512069
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Subscribed to topic(s): metadata-success
[34mINFO [0;39m 2024-01-29 14:11:52 [http-nio-8100-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[34mINFO [0;39m 2024-01-29 14:11:52 [http-nio-8100-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[34mINFO [0;39m 2024-01-29 14:11:52 [http-nio-8100-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values:
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [kafka:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-blueprint-service-group-2
	client.rack =
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = blueprint-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 90000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537512102
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Subscribed to topic(s): metadata-failure
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values:
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [kafka:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-blueprint-service-group-3
	client.rack =
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = blueprint-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 90000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537512121
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Subscribed to topic(s): created-blueprint-listen-to-yourself
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values:
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [kafka:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-blueprint-service-group-4
	client.rack =
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = blueprint-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 90000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-2-d08a3223-6723-4642-9421-742855e12d71
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537512151
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Subscribed to topic(s): restore-success
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-1-5494de2b-7710-498f-a2e9-6e076687db39
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-3-1c7c5df8-73e1-40eb-a125-f19d9123cd4d
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values:
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [kafka:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-blueprint-service-group-5
	client.rack =
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = blueprint-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 90000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537512171
[34mINFO [0;39m 2024-01-29 14:11:52 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Subscribed to topic(s): restore-failure
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-4-3b2e2781-7d47-4699-8a7e-e3c1414140f0
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-5-2953b7d2-1299-4107-b52b-8e4bb54818b2
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
[34mINFO [0;39m 2024-01-29 14:11:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] (Re-)joining group
[34mINFO [0;39m 2024-01-29 14:11:52 [main] c.w.a.b.BlueprintServiceApplication - Started BlueprintServiceApplication in 5.641 seconds (process running for 6.587)
[34mINFO [0;39m 2024-01-29 14:12:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:12:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:42:00.016846378
[34mINFO [0;39m 2024-01-29 14:12:01 [http-nio-8100-exec-3] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=14547f69-4549-4f2d-9f0e-d4480cebddf9, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:52894"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"d8f94e284a4f:8100", content-length:"0"]
[34mINFO [0;39m 2024-01-29 14:12:01 [http-nio-8100-exec-3] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
{
  "blueprintId" : "14547f69-4549-4f2d-9f0e-d4480cebddf9",
  "blueprintSagaStatus" : "INITIALISED",
  "restoreMode" : "SCRIPT",
  "databaseType" : "POSTGRESQL",
  "title" : "Employees",
  "dumpStoreSuccess" : false,
  "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
  "createdDate" : "2024-01-29T14:11:39.834",
  "originalDumpName" : "employeesdb_script.sql"
}
[34mINFO [0;39m 2024-01-29 14:12:06 [http-nio-8100-exec-5] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=14547f69-4549-4f2d-9f0e-d4480cebddf9, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:52908"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"d8f94e284a4f:8100", content-length:"0"]
[34mINFO [0;39m 2024-01-29 14:12:06 [http-nio-8100-exec-5] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
{
  "blueprintId" : "14547f69-4549-4f2d-9f0e-d4480cebddf9",
  "blueprintSagaStatus" : "INITIALISED",
  "restoreMode" : "SCRIPT",
  "databaseType" : "POSTGRESQL",
  "title" : "Employees",
  "dumpStoreSuccess" : false,
  "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
  "createdDate" : "2024-01-29T14:11:39.834",
  "originalDumpName" : "employeesdb_script.sql"
}
[34mINFO [0;39m 2024-01-29 14:12:11 [http-nio-8100-exec-7] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=14547f69-4549-4f2d-9f0e-d4480cebddf9, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:40406"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"d8f94e284a4f:8100", content-length:"0"]
[34mINFO [0;39m 2024-01-29 14:12:11 [http-nio-8100-exec-7] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
{
  "blueprintId" : "14547f69-4549-4f2d-9f0e-d4480cebddf9",
  "blueprintSagaStatus" : "INITIALISED",
  "restoreMode" : "SCRIPT",
  "databaseType" : "POSTGRESQL",
  "title" : "Employees",
  "dumpStoreSuccess" : false,
  "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
  "createdDate" : "2024-01-29T14:11:39.834",
  "originalDumpName" : "employeesdb_script.sql"
}
[34mINFO [0;39m 2024-01-29 14:12:16 [http-nio-8100-exec-9] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=14547f69-4549-4f2d-9f0e-d4480cebddf9, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:40410"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"d8f94e284a4f:8100", content-length:"0"]
[34mINFO [0;39m 2024-01-29 14:12:16 [http-nio-8100-exec-9] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
{
  "blueprintId" : "14547f69-4549-4f2d-9f0e-d4480cebddf9",
  "blueprintSagaStatus" : "INITIALISED",
  "restoreMode" : "SCRIPT",
  "databaseType" : "POSTGRESQL",
  "title" : "Employees",
  "dumpStoreSuccess" : false,
  "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
  "createdDate" : "2024-01-29T14:11:39.834",
  "originalDumpName" : "employeesdb_script.sql"
}
[34mINFO [0;39m 2024-01-29 14:12:21 [http-nio-8100-exec-1] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=14547f69-4549-4f2d-9f0e-d4480cebddf9, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:39888"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"41591d03f97a:8100", content-length:"0"]
[34mINFO [0;39m 2024-01-29 14:12:21 [http-nio-8100-exec-1] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
{
  "blueprintId" : "14547f69-4549-4f2d-9f0e-d4480cebddf9",
  "blueprintSagaStatus" : "INITIALISED",
  "restoreMode" : "SCRIPT",
  "databaseType" : "POSTGRESQL",
  "title" : "Employees",
  "dumpStoreSuccess" : false,
  "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
  "createdDate" : "2024-01-29T14:11:39.834",
  "originalDumpName" : "employeesdb_script.sql"
}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-blueprint-service-group-3-1c7c5df8-73e1-40eb-a125-f19d9123cd4d', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-blueprint-service-group-2-d08a3223-6723-4642-9421-742855e12d71', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-blueprint-service-group-5-2953b7d2-1299-4107-b52b-8e4bb54818b2', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-blueprint-service-group-1-5494de2b-7710-498f-a2e9-6e076687db39', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-blueprint-service-group-4-3b2e2781-7d47-4699-8a7e-e3c1414140f0', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Finished assignment for group at generation 3: {consumer-blueprint-service-group-4-3b2e2781-7d47-4699-8a7e-e3c1414140f0=Assignment(partitions=[restore-success-0]), consumer-blueprint-service-group-3-1c7c5df8-73e1-40eb-a125-f19d9123cd4d=Assignment(partitions=[created-blueprint-listen-to-yourself-0]), consumer-blueprint-service-group-2-d08a3223-6723-4642-9421-742855e12d71=Assignment(partitions=[metadata-failure-0]), consumer-blueprint-service-group-5-2953b7d2-1299-4107-b52b-8e4bb54818b2=Assignment(partitions=[restore-failure-0]), consumer-blueprint-service-group-1-5494de2b-7710-498f-a2e9-6e076687db39=Assignment(partitions=[metadata-success-0])}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-blueprint-service-group-2-d08a3223-6723-4642-9421-742855e12d71', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-blueprint-service-group-5-2953b7d2-1299-4107-b52b-8e4bb54818b2', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[restore-failure-0])
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[metadata-failure-0])
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-blueprint-service-group-1-5494de2b-7710-498f-a2e9-6e076687db39', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[metadata-success-0])
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-blueprint-service-group-4-3b2e2781-7d47-4699-8a7e-e3c1414140f0', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[restore-success-0])
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-blueprint-service-group-3-1c7c5df8-73e1-40eb-a125-f19d9123cd4d', protocol='range'}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[created-blueprint-listen-to-yourself-0])
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Adding newly assigned partitions: created-blueprint-listen-to-yourself-0
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Adding newly assigned partitions: metadata-success-0
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Adding newly assigned partitions: restore-failure-0
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Adding newly assigned partitions: metadata-failure-0
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Adding newly assigned partitions: restore-success-0
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Setting offset for partition restore-success-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Setting offset for partition metadata-success-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-5, groupId=blueprint-service-group] Setting offset for partition restore-failure-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Setting offset for partition created-blueprint-listen-to-yourself-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [metadata-success-0]
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [restore-failure-0]
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [created-blueprint-listen-to-yourself-0]
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [restore-success-0]
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Setting offset for partition metadata-failure-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [metadata-failure-0]
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] c.w.a.b.a.i.m.BlueprintInstantiatedKafkaListener - Received BlueprintInstantiatedEvent(blueprint=Blueprint(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9, dumpFile=null, blueprintSagaStatus=INITIALISED, restoreMode=SCRIPT, databaseType=POSTGRESQL, title=Employees, dumpStoreSuccess=false, description=This is just a sample dump of employees database made in a SCRIPT mode., createdDate=2024-01-29T14:11:39.834176008, originalDumpName=employeesdb_script.sql))
[34mINFO [0;39m 2024-01-29 14:12:24 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] c.w.a.b.a.o.p.d.DumpRepositoryS3Adapter - Uploading Dump to S3... Blueprint : Blueprint(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9, dumpFile=null, blueprintSagaStatus=INITIALISED, restoreMode=SCRIPT, databaseType=POSTGRESQL, title=Employees, dumpStoreSuccess=false, description=This is just a sample dump of employees database made in a SCRIPT mode., createdDate=2024-01-29T14:11:39.834176008, originalDumpName=employeesdb_script.sql)
[31mWARN [0;39m 2024-01-29 14:12:25 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] s.a.a.h.a.internal.utils.ApacheUtils - NoSuchMethodException was thrown when disabling normalizeUri. This indicates you are using an old version (< 4.5.8) of Apache http client. It is recommended to use http client version >= 4.5.9 to avoid the breaking change introduced in apache client 4.5.7 and the latency in exception handling. See https://github.com/aws/aws-sdk-java/issues/1919 for more information
[34mINFO [0;39m 2024-01-29 14:12:25 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] c.w.a.s.impl.LoggingKafkaTemplate - Publishing to Kafka | Topic: created-blueprint | Value: BlueprintCreatedEvent(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9, restoreMode=SCRIPT)
[34mINFO [0;39m 2024-01-29 14:12:25 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.c.producer.ProducerConfig - ProducerConfig values:
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [kafka:9093]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

[34mINFO [0;39m 2024-01-29 14:12:25 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
[34mINFO [0;39m 2024-01-29 14:12:25 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
[34mINFO [0;39m 2024-01-29 14:12:25 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
[34mINFO [0;39m 2024-01-29 14:12:25 [org.springframework.kafka.KafkaListenerEndpointContainer#4-0-C-1] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706537545703
[34mINFO [0;39m 2024-01-29 14:12:25 [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: TtztiX6VTn-Y6sd_MhYvmA
[34mINFO [0;39m 2024-01-29 14:12:25 [kafka-producer-network-thread | producer-1] o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
[34mINFO [0;39m 2024-01-29 14:12:26 [http-nio-8100-exec-3] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=14547f69-4549-4f2d-9f0e-d4480cebddf9, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:39898"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"d8f94e284a4f:8100", content-length:"0"]
[34mINFO [0;39m 2024-01-29 14:12:26 [http-nio-8100-exec-3] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
{
  "blueprintId" : "14547f69-4549-4f2d-9f0e-d4480cebddf9",
  "blueprintSagaStatus" : "DUMP_STORE_SUCCESS",
  "restoreMode" : "SCRIPT",
  "databaseType" : "POSTGRESQL",
  "title" : "Employees",
  "dumpStoreSuccess" : true,
  "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
  "createdDate" : "2024-01-29T14:11:39.834",
  "originalDumpName" : "employeesdb_script.sql"
}
[34mINFO [0;39m 2024-01-29 14:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.w.a.b.a.i.m.DatabaseRestoredKafkaListener - Received DatabaseRestoredSuccessEvent(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9)
[34mINFO [0;39m 2024-01-29 14:12:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] c.w.a.b.d.s.BlueprintSagaStatusUpdater - Updated status to RESTORE_SUCCESS of blueprint: Blueprint(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9, dumpFile=null, blueprintSagaStatus=RESTORE_SUCCESS, restoreMode=SCRIPT, databaseType=POSTGRESQL, title=Employees, dumpStoreSuccess=true, description=This is just a sample dump of employees database made in a SCRIPT mode., createdDate=2024-01-29T14:11:39.834, originalDumpName=employeesdb_script.sql)
[34mINFO [0;39m 2024-01-29 14:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] c.w.a.b.a.i.m.MetadataExtractedKafkaListener - Received MetadataExtractedSuccessEvent(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9)
[34mINFO [0;39m 2024-01-29 14:12:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] c.w.a.b.d.s.BlueprintSagaStatusUpdater - Updated status to METADATA_EXTRACTION_SUCCESS of blueprint: Blueprint(blueprintId=14547f69-4549-4f2d-9f0e-d4480cebddf9, dumpFile=null, blueprintSagaStatus=METADATA_EXTRACTION_SUCCESS, restoreMode=SCRIPT, databaseType=POSTGRESQL, title=Employees, dumpStoreSuccess=true, description=This is just a sample dump of employees database made in a SCRIPT mode., createdDate=2024-01-29T14:11:39.834, originalDumpName=employeesdb_script.sql)
[34mINFO [0;39m 2024-01-29 14:12:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:12:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:42:30.004773337
[34mINFO [0;39m 2024-01-29 14:12:31 [http-nio-8100-exec-5] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=14547f69-4549-4f2d-9f0e-d4480cebddf9, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="172.28.0.1:52858"", x-forwarded-for:"172.28.0.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"41591d03f97a:8100", content-length:"0"]
[34mINFO [0;39m 2024-01-29 14:12:31 [http-nio-8100-exec-5] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
{
  "blueprintId" : "14547f69-4549-4f2d-9f0e-d4480cebddf9",
  "blueprintSagaStatus" : "METADATA_EXTRACTION_SUCCESS",
  "restoreMode" : "SCRIPT",
  "databaseType" : "POSTGRESQL",
  "title" : "Employees",
  "dumpStoreSuccess" : true,
  "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
  "createdDate" : "2024-01-29T14:11:39.834",
  "originalDumpName" : "employeesdb_script.sql"
}
[34mINFO [0;39m 2024-01-29 14:13:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:13:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:43:00.016617962
[34mINFO [0;39m 2024-01-29 14:13:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:13:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:43:30.015327420
[34mINFO [0;39m 2024-01-29 14:14:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:14:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:44:00.013890378
[34mINFO [0;39m 2024-01-29 14:14:29 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:14:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:44:30.010624878
[34mINFO [0;39m 2024-01-29 14:15:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:15:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:45:00.012011170
[34mINFO [0;39m 2024-01-29 14:15:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
[34mINFO [0;39m 2024-01-29 14:15:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-29T13:45:30.006410337
