simulation_1-blueprint-service-1  | Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
simulation_1-blueprint-service-1  | 19:56:48,406 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: connection failed. java.net.ConnectException: Connection refused
simulation_1-blueprint-service-1  | 	at java.net.ConnectException: Connection refused
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
simulation_1-blueprint-service-1  | 	at 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
simulation_1-blueprint-service-1  | 	at 	at java.base/java.net.Socket.connect(Socket.java:633)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.openSocket(AbstractLogstashTcpSocketAppender.java:765)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.onStart(AbstractLogstashTcpSocketAppender.java:691)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AsyncDisruptorAppender$EventClearingEventHandler.onStart(AsyncDisruptorAppender.java:382)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.notifyStart(BatchEventProcessor.java:224)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:120)
simulation_1-blueprint-service-1  | 	at 	at java.base/java.lang.Thread.run(Thread.java:833)
simulation_1-blueprint-service-1  | 19:56:48,418 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: Waiting 29980ms before attempting reconnection.
simulation_1-blueprint-service-1  | 
simulation_1-blueprint-service-1  |   .   ____          _            __ _ _
simulation_1-blueprint-service-1  |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
simulation_1-blueprint-service-1  | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
simulation_1-blueprint-service-1  |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
simulation_1-blueprint-service-1  |   '  |____| .__|_| |_|_| |_\__, | / / / /
simulation_1-blueprint-service-1  |  =========|_|==============|___/=/_/_/_/
simulation_1-blueprint-service-1  |  :: Spring Boot ::                (v3.2.0)
simulation_1-blueprint-service-1  | 
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:56:48 [background-preinit] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:56:49 [main] c.w.a.b.BlueprintServiceApplication - Starting BlueprintServiceApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/app.jar started by root in /)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:56:49 [main] c.w.a.b.BlueprintServiceApplication - No active profile set, falling back to 1 default profile: "default"
simulation_1-database-restoration-service-1  | Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
simulation_1-database-restoration-service-1  | 
simulation_1-database-restoration-service-1  |   .   ____          _            __ _ _
simulation_1-database-restoration-service-1  |  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
simulation_1-database-restoration-service-1  | ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
simulation_1-database-restoration-service-1  |  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
simulation_1-database-restoration-service-1  |   '  |____| .__|_| |_|_| |_\__, | / / / /
simulation_1-database-restoration-service-1  |  =========|_|==============|___/=/_/_/_/
simulation_1-database-restoration-service-1  |  :: Spring Boot ::                (v3.2.0)
simulation_1-database-restoration-service-1  | 
simulation_1-database-restoration-service-1  | 2024-01-28T19:56:49.959Z  INFO 1 --- [database-restoration-service] [           main] .d.DatabaseRestorationServiceApplication : Starting DatabaseRestorationServiceApplication vsimulation-1 using Java 17.0.2 with PID 1 (/app.jar started by root in /)
simulation_1-database-restoration-service-1  | 2024-01-28T19:56:49.997Z  INFO 1 --- [database-restoration-service] [           main] .d.DatabaseRestorationServiceApplication : No active profile set, falling back to 1 default profile: "default"
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:56:57 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:56:57 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 338 ms. Found 1 MongoDB repository interface.
simulation_1-database-restoration-service-1  | 2024-01-28T19:56:59.270Z  INFO 1 --- [database-restoration-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:56:59 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:56:59 [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 0 Reactive MongoDB repository interfaces.
simulation_1-database-restoration-service-1  | 2024-01-28T19:56:59.884Z  INFO 1 --- [database-restoration-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 567 ms. Found 0 Reactive MongoDB repository interfaces.
simulation_1-database-restoration-service-1  | 2024-01-28T19:56:59.897Z  INFO 1 --- [database-restoration-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
simulation_1-database-restoration-service-1  | 2024-01-28T19:56:59.995Z  INFO 1 --- [database-restoration-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 97 ms. Found 2 MongoDB repository interfaces.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:00 [main] o.s.cloud.context.scope.GenericScope - BeanFactory id=d36cf96f-b91b-364c-92cc-e2cf13fd9573
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:01.677Z  INFO 1 --- [database-restoration-service] [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=ceef3ea5-5de4-378c-8ce7-5c248fb96aaa
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$679/0x000000080108ca58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:01 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.142Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.155Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.174Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.223Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.259Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.261Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$579/0x000000080101a4b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.271Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.320Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.338Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.361Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.361Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.362Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.388Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.415Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.416Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.416Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.430Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.432Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.461Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:02.469Z  WARN 1 --- [database-restoration-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:03 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8100 (http)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:03 [main] o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8100"]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:03 [main] o.a.catalina.core.StandardService - Starting service [Tomcat]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:03 [main] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:03.748Z  INFO 1 --- [database-restoration-service] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8200 (http)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:03.767Z  INFO 1 --- [database-restoration-service] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:03.767Z  INFO 1 --- [database-restoration-service] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:03 [main] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:03 [main] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 13047 ms
simulation_1-blueprint-service-1  | Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:03.951Z  INFO 1 --- [database-restoration-service] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:03.952Z  INFO 1 --- [database-restoration-service] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 13425 ms
simulation_1-database-restoration-service-1  | Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:08.950Z  INFO 1 --- [database-restoration-service] [           main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='RESTORATIONS_USER', source='RESTORATIONS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2036f83, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@68b3248a], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5e158f33, com.mongodb.Jep395RecordCodecProvider@20fcea37, com.mongodb.KotlinCodecProvider@399af6dc]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@48fc0211], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:10 [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='BLUEPRINTS_USER', source='BLUEPRINTS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3199a202, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@71a2df1], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7286827b, com.mongodb.Jep395RecordCodecProvider@1dd64243, com.mongodb.KotlinCodecProvider@2ef913a4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@63c84d31], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:10.440Z  INFO 1 --- [database-restoration-service] [}-mongodb:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=958609459}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:11 [cluster-ClusterId{value='65b6b19481f88a14de86a561', description='null'}-mongodb:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=710333751}
simulation_1-blueprint-service-1  | 19:57:18,470 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: connection failed. java.net.ConnectException: Connection refused
simulation_1-blueprint-service-1  | 	at java.net.ConnectException: Connection refused
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
simulation_1-blueprint-service-1  | 	at 	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
simulation_1-blueprint-service-1  | 	at 	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
simulation_1-blueprint-service-1  | 	at 	at java.base/java.net.Socket.connect(Socket.java:633)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.openSocket(AbstractLogstashTcpSocketAppender.java:765)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AbstractLogstashTcpSocketAppender$TcpSendingEventHandler.onStart(AbstractLogstashTcpSocketAppender.java:691)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.appender.AsyncDisruptorAppender$EventClearingEventHandler.onStart(AsyncDisruptorAppender.java:382)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.notifyStart(BatchEventProcessor.java:224)
simulation_1-blueprint-service-1  | 	at 	at net.logstash.logback.encoder.com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:120)
simulation_1-blueprint-service-1  | 	at 	at java.base/java.lang.Thread.run(Thread.java:833)
simulation_1-blueprint-service-1  | 19:57:18,471 |-WARN in net.logstash.logback.appender.LogstashTcpSocketAppender[LOGSTASH] - Log destination logstash/<unresolved>:5001: Waiting 29969ms before attempting reconnection.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.117Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: dead-letter
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.130Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: created-blueprint
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.132Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: anonymization-execution
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.135Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: anonymization-execution-success
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.136Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: anonymization-execution-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.137Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: restore-success
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.138Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: restore-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.138Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: operations
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.138Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: load-success
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.140Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: load-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.145Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: extraction-success
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.145Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: extraction-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.145Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: transformation-anonymize-success
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.145Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: transformation-anonymize-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.145Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: transformation-script-success
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.147Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: transformation-script-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.149Z  WARN 1 --- [database-restoration-service] [           main] c.w.a.s.config.KafkaTopicConfig          : Creating topic: created-worksheet
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: dead-letter
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: created-blueprint
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution-success
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: anonymization-execution-failure
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: restore-success
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: restore-failure
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: operations
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: load-success
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: load-failure
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: extraction-success
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: extraction-failure
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-anonymize-success
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-anonymize-failure
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-script-success
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: transformation-script-failure
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:20 [main] c.w.a.s.config.KafkaTopicConfig - Creating topic: created-worksheet
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.469Z  INFO 1 --- [database-restoration-service] [}-mongodb:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13400584}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:20.508Z  INFO 1 --- [database-restoration-service] [           main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='RESTORATIONS_USER', source='RESTORATIONS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3c5bb37d, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@68b3248a], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5e158f33, com.mongodb.Jep395RecordCodecProvider@20fcea37, com.mongodb.KotlinCodecProvider@399af6dc]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@48fc0211], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:20 [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.1"}, "os": {"type": "Linux", "name": "Linux", "architecture": "aarch64", "version": "5.15.49-linuxkit"}, "platform": "Java/Oracle Corporation/17.0.2+8-86"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='BLUEPRINTS_USER', source='BLUEPRINTS_DB', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4f2a9903, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@71a2df1], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7286827b, com.mongodb.Jep395RecordCodecProvider@1dd64243, com.mongodb.KotlinCodecProvider@2ef913a4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[mongodb:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@63c84d31], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:20 [cluster-ClusterId{value='65b6b1a081f88a14de86a562', description='null'}-mongodb:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=mongodb:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=56642000}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:21.373Z  INFO 1 --- [database-restoration-service] [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:21.495Z  WARN 1 --- [database-restoration-service] [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:21.536Z  INFO 1 --- [database-restoration-service] [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:21 [main] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:21.794Z  INFO 1 --- [database-restoration-service] [           main] o.a.k.clients.admin.AdminClientConfig    : AdminClientConfig values: 
simulation_1-database-restoration-service-1  | 	auto.include.jmx.reporter = true
simulation_1-database-restoration-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-database-restoration-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-database-restoration-service-1  | 	client.id = 
simulation_1-database-restoration-service-1  | 	connections.max.idle.ms = 300000
simulation_1-database-restoration-service-1  | 	default.api.timeout.ms = 60000
simulation_1-database-restoration-service-1  | 	metadata.max.age.ms = 300000
simulation_1-database-restoration-service-1  | 	metric.reporters = []
simulation_1-database-restoration-service-1  | 	metrics.num.samples = 2
simulation_1-database-restoration-service-1  | 	metrics.recording.level = INFO
simulation_1-database-restoration-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-database-restoration-service-1  | 	receive.buffer.bytes = 65536
simulation_1-database-restoration-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-database-restoration-service-1  | 	reconnect.backoff.ms = 50
simulation_1-database-restoration-service-1  | 	request.timeout.ms = 30000
simulation_1-database-restoration-service-1  | 	retries = 2147483647
simulation_1-database-restoration-service-1  | 	retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.jaas.config = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-database-restoration-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-database-restoration-service-1  | 	sasl.kerberos.service.name = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-database-restoration-service-1  | 	security.protocol = PLAINTEXT
simulation_1-database-restoration-service-1  | 	security.providers = null
simulation_1-database-restoration-service-1  | 	send.buffer.bytes = 131072
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-database-restoration-service-1  | 	ssl.cipher.suites = null
simulation_1-database-restoration-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-database-restoration-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-database-restoration-service-1  | 	ssl.engine.factory.class = null
simulation_1-database-restoration-service-1  | 	ssl.key.password = null
simulation_1-database-restoration-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-database-restoration-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.key = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.location = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.password = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.type = JKS
simulation_1-database-restoration-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-database-restoration-service-1  | 	ssl.provider = null
simulation_1-database-restoration-service-1  | 	ssl.secure.random.implementation = null
simulation_1-database-restoration-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-database-restoration-service-1  | 	ssl.truststore.certificates = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.location = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.password = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.type = JKS
simulation_1-database-restoration-service-1  | 
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:21 [main] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:21 [main] o.s.b.a.e.web.EndpointLinksResolver - Exposing 17 endpoint(s) beneath base path '/actuator'
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:22.015Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:22.018Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 60e845626d8a465a
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:22.018Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1706471842014
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:22 [main] o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
simulation_1-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_1-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-blueprint-service-1  | 	client.id = 
simulation_1-blueprint-service-1  | 	connections.max.idle.ms = 300000
simulation_1-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_1-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_1-blueprint-service-1  | 	metric.reporters = []
simulation_1-blueprint-service-1  | 	metrics.num.samples = 2
simulation_1-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_1-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_1-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_1-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_1-blueprint-service-1  | 	retries = 2147483647
simulation_1-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.jaas.config = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.login.class = null
simulation_1-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_1-blueprint-service-1  | 	security.providers = null
simulation_1-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_1-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_1-blueprint-service-1  | 	ssl.key.password = null
simulation_1-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-blueprint-service-1  | 	ssl.keystore.key = null
simulation_1-blueprint-service-1  | 	ssl.keystore.location = null
simulation_1-blueprint-service-1  | 	ssl.keystore.password = null
simulation_1-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_1-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-blueprint-service-1  | 	ssl.provider = null
simulation_1-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_1-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_1-blueprint-service-1  | 	ssl.truststore.location = null
simulation_1-blueprint-service-1  | 	ssl.truststore.password = null
simulation_1-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_1-blueprint-service-1  | 
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:23 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:23 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:23 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706471843057
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [kafka-admin-client-thread | adminclient-1] o.a.kafka.common.metrics.Metrics - Metrics reporters closed
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.360Z  INFO 1 --- [database-restoration-service] [| adminclient-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.admin.client for adminclient-1 unregistered
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.363Z  INFO 1 --- [database-restoration-service] [| adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.364Z  INFO 1 --- [database-restoration-service] [| adminclient-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.364Z  INFO 1 --- [database-restoration-service] [| adminclient-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Disable delta property : false
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Application is null : false
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Application version is -1: true
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:24 [main] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.458Z  INFO 1 --- [database-restoration-service] [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.644Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.655Z  INFO 1 --- [database-restoration-service] [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.890Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.891Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.891Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.891Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.891Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.891Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:24.891Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] c.netflix.discovery.DiscoveryClient - The response status is 200
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1706471845343 with initial instances count: 0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.s.c.n.e.s.EurekaServiceRegistry - Registering application BLUEPRINT-SERVICE with eureka with status UP
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1706471845381, current=UP, previous=STARTING]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_BLUEPRINT-SERVICE/c9c3d03b94db:blueprint-service:8100: registering service...
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.390Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : The response status is 200
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8100"]
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.396Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.402Z  INFO 1 --- [database-restoration-service] [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.411Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1706471845411 with initial instances count: 0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.424Z  INFO 1 --- [database-restoration-service] [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application DATABASE-RESTORATION-SERVICE with eureka with status UP
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.432Z  INFO 1 --- [database-restoration-service] [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1706471845432, current=UP, previous=STARTING]
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.445Z  INFO 1 --- [database-restoration-service] [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATABASE-RESTORATION-SERVICE/6118ceb913fc:database-restoration-service:8200: registering service...
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.565Z  INFO 1 --- [database-restoration-service] [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_DATABASE-RESTORATION-SERVICE/6118ceb913fc:database-restoration-service:8200 - registration status: 204
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient - DiscoveryClient_BLUEPRINT-SERVICE/c9c3d03b94db:blueprint-service:8100 - registration status: 204
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8100 (http) with context path ''
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8100
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.610Z  INFO 1 --- [database-restoration-service] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8200 (http) with context path ''
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.611Z  INFO 1 --- [database-restoration-service] [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8200
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_1-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_1-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_1-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_1-blueprint-service-1  | 	auto.offset.reset = latest
simulation_1-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-blueprint-service-1  | 	check.crcs = true
simulation_1-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-1
simulation_1-blueprint-service-1  | 	client.rack = 
simulation_1-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_1-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_1-blueprint-service-1  | 	enable.auto.commit = false
simulation_1-blueprint-service-1  | 	exclude.internal.topics = true
simulation_1-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_1-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_1-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_1-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_1-blueprint-service-1  | 	group.instance.id = null
simulation_1-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_1-blueprint-service-1  | 	interceptor.classes = []
simulation_1-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_1-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_1-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_1-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_1-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_1-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_1-blueprint-service-1  | 	max.poll.records = 500
simulation_1-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_1-blueprint-service-1  | 	metric.reporters = []
simulation_1-blueprint-service-1  | 	metrics.num.samples = 2
simulation_1-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_1-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_1-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_1-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_1-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_1-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.jaas.config = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.login.class = null
simulation_1-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_1-blueprint-service-1  | 	security.providers = null
simulation_1-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_1-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_1-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_1-blueprint-service-1  | 	ssl.key.password = null
simulation_1-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-blueprint-service-1  | 	ssl.keystore.key = null
simulation_1-blueprint-service-1  | 	ssl.keystore.location = null
simulation_1-blueprint-service-1  | 	ssl.keystore.password = null
simulation_1-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_1-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-blueprint-service-1  | 	ssl.provider = null
simulation_1-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_1-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_1-blueprint-service-1  | 	ssl.truststore.location = null
simulation_1-blueprint-service-1  | 	ssl.truststore.password = null
simulation_1-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_1-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_1-blueprint-service-1  | 
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.780Z  INFO 1 --- [database-restoration-service] [           main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
simulation_1-database-restoration-service-1  | 	allow.auto.create.topics = true
simulation_1-database-restoration-service-1  | 	auto.commit.interval.ms = 5000
simulation_1-database-restoration-service-1  | 	auto.include.jmx.reporter = true
simulation_1-database-restoration-service-1  | 	auto.offset.reset = latest
simulation_1-database-restoration-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-database-restoration-service-1  | 	check.crcs = true
simulation_1-database-restoration-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-database-restoration-service-1  | 	client.id = consumer-database-restoration-service-group-1
simulation_1-database-restoration-service-1  | 	client.rack = 
simulation_1-database-restoration-service-1  | 	connections.max.idle.ms = 540000
simulation_1-database-restoration-service-1  | 	default.api.timeout.ms = 60000
simulation_1-database-restoration-service-1  | 	enable.auto.commit = false
simulation_1-database-restoration-service-1  | 	exclude.internal.topics = true
simulation_1-database-restoration-service-1  | 	fetch.max.bytes = 52428800
simulation_1-database-restoration-service-1  | 	fetch.max.wait.ms = 500
simulation_1-database-restoration-service-1  | 	fetch.min.bytes = 1
simulation_1-database-restoration-service-1  | 	group.id = database-restoration-service-group
simulation_1-database-restoration-service-1  | 	group.instance.id = null
simulation_1-database-restoration-service-1  | 	heartbeat.interval.ms = 3000
simulation_1-database-restoration-service-1  | 	interceptor.classes = []
simulation_1-database-restoration-service-1  | 	internal.leave.group.on.close = true
simulation_1-database-restoration-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_1-database-restoration-service-1  | 	isolation.level = read_uncommitted
simulation_1-database-restoration-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_1-database-restoration-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_1-database-restoration-service-1  | 	max.poll.interval.ms = 90000
simulation_1-database-restoration-service-1  | 	max.poll.records = 500
simulation_1-database-restoration-service-1  | 	metadata.max.age.ms = 300000
simulation_1-database-restoration-service-1  | 	metric.reporters = []
simulation_1-database-restoration-service-1  | 	metrics.num.samples = 2
simulation_1-database-restoration-service-1  | 	metrics.recording.level = INFO
simulation_1-database-restoration-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-database-restoration-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_1-database-restoration-service-1  | 	receive.buffer.bytes = 65536
simulation_1-database-restoration-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-database-restoration-service-1  | 	reconnect.backoff.ms = 50
simulation_1-database-restoration-service-1  | 	request.timeout.ms = 30000
simulation_1-database-restoration-service-1  | 	retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.jaas.config = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-database-restoration-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-database-restoration-service-1  | 	sasl.kerberos.service.name = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-database-restoration-service-1  | 	security.protocol = PLAINTEXT
simulation_1-database-restoration-service-1  | 	security.providers = null
simulation_1-database-restoration-service-1  | 	send.buffer.bytes = 131072
simulation_1-database-restoration-service-1  | 	session.timeout.ms = 45000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-database-restoration-service-1  | 	ssl.cipher.suites = null
simulation_1-database-restoration-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-database-restoration-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-database-restoration-service-1  | 	ssl.engine.factory.class = null
simulation_1-database-restoration-service-1  | 	ssl.key.password = null
simulation_1-database-restoration-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-database-restoration-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.key = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.location = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.password = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.type = JKS
simulation_1-database-restoration-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-database-restoration-service-1  | 	ssl.provider = null
simulation_1-database-restoration-service-1  | 	ssl.secure.random.implementation = null
simulation_1-database-restoration-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-database-restoration-service-1  | 	ssl.truststore.certificates = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.location = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.password = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.type = JKS
simulation_1-database-restoration-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_1-database-restoration-service-1  | 
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706471845878
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Subscribed to topic(s): metadata-success
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_1-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_1-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_1-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_1-blueprint-service-1  | 	auto.offset.reset = latest
simulation_1-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-blueprint-service-1  | 	check.crcs = true
simulation_1-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-2
simulation_1-blueprint-service-1  | 	client.rack = 
simulation_1-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_1-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_1-blueprint-service-1  | 	enable.auto.commit = false
simulation_1-blueprint-service-1  | 	exclude.internal.topics = true
simulation_1-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_1-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_1-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_1-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_1-blueprint-service-1  | 	group.instance.id = null
simulation_1-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_1-blueprint-service-1  | 	interceptor.classes = []
simulation_1-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_1-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_1-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_1-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_1-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_1-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_1-blueprint-service-1  | 	max.poll.records = 500
simulation_1-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_1-blueprint-service-1  | 	metric.reporters = []
simulation_1-blueprint-service-1  | 	metrics.num.samples = 2
simulation_1-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_1-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_1-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_1-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_1-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_1-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.jaas.config = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.login.class = null
simulation_1-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_1-blueprint-service-1  | 	security.providers = null
simulation_1-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_1-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_1-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_1-blueprint-service-1  | 	ssl.key.password = null
simulation_1-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-blueprint-service-1  | 	ssl.keystore.key = null
simulation_1-blueprint-service-1  | 	ssl.keystore.location = null
simulation_1-blueprint-service-1  | 	ssl.keystore.password = null
simulation_1-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_1-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-blueprint-service-1  | 	ssl.provider = null
simulation_1-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_1-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_1-blueprint-service-1  | 	ssl.truststore.location = null
simulation_1-blueprint-service-1  | 	ssl.truststore.password = null
simulation_1-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_1-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_1-blueprint-service-1  | 
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706471845936
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Subscribed to topic(s): metadata-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.952Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.953Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 60e845626d8a465a
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.953Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1706471845952
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.955Z  INFO 1 --- [database-restoration-service] [           main] fkaConsumerFactory$ExtendedKafkaConsumer : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Subscribed to topic(s): created-blueprint
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.981Z  INFO 1 --- [database-restoration-service] [           main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
simulation_1-database-restoration-service-1  | 	allow.auto.create.topics = true
simulation_1-database-restoration-service-1  | 	auto.commit.interval.ms = 5000
simulation_1-database-restoration-service-1  | 	auto.include.jmx.reporter = true
simulation_1-database-restoration-service-1  | 	auto.offset.reset = latest
simulation_1-database-restoration-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-database-restoration-service-1  | 	check.crcs = true
simulation_1-database-restoration-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-database-restoration-service-1  | 	client.id = consumer-database-restoration-service-group-2
simulation_1-database-restoration-service-1  | 	client.rack = 
simulation_1-database-restoration-service-1  | 	connections.max.idle.ms = 540000
simulation_1-database-restoration-service-1  | 	default.api.timeout.ms = 60000
simulation_1-database-restoration-service-1  | 	enable.auto.commit = false
simulation_1-database-restoration-service-1  | 	exclude.internal.topics = true
simulation_1-database-restoration-service-1  | 	fetch.max.bytes = 52428800
simulation_1-database-restoration-service-1  | 	fetch.max.wait.ms = 500
simulation_1-database-restoration-service-1  | 	fetch.min.bytes = 1
simulation_1-database-restoration-service-1  | 	group.id = database-restoration-service-group
simulation_1-database-restoration-service-1  | 	group.instance.id = null
simulation_1-database-restoration-service-1  | 	heartbeat.interval.ms = 3000
simulation_1-database-restoration-service-1  | 	interceptor.classes = []
simulation_1-database-restoration-service-1  | 	internal.leave.group.on.close = true
simulation_1-database-restoration-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_1-database-restoration-service-1  | 	isolation.level = read_uncommitted
simulation_1-database-restoration-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_1-database-restoration-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_1-database-restoration-service-1  | 	max.poll.interval.ms = 90000
simulation_1-database-restoration-service-1  | 	max.poll.records = 500
simulation_1-database-restoration-service-1  | 	metadata.max.age.ms = 300000
simulation_1-database-restoration-service-1  | 	metric.reporters = []
simulation_1-database-restoration-service-1  | 	metrics.num.samples = 2
simulation_1-database-restoration-service-1  | 	metrics.recording.level = INFO
simulation_1-database-restoration-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-database-restoration-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_1-database-restoration-service-1  | 	receive.buffer.bytes = 65536
simulation_1-database-restoration-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-database-restoration-service-1  | 	reconnect.backoff.ms = 50
simulation_1-database-restoration-service-1  | 	request.timeout.ms = 30000
simulation_1-database-restoration-service-1  | 	retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.jaas.config = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-database-restoration-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-database-restoration-service-1  | 	sasl.kerberos.service.name = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-database-restoration-service-1  | 	security.protocol = PLAINTEXT
simulation_1-database-restoration-service-1  | 	security.providers = null
simulation_1-database-restoration-service-1  | 	send.buffer.bytes = 131072
simulation_1-database-restoration-service-1  | 	session.timeout.ms = 45000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-database-restoration-service-1  | 	ssl.cipher.suites = null
simulation_1-database-restoration-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-database-restoration-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-database-restoration-service-1  | 	ssl.engine.factory.class = null
simulation_1-database-restoration-service-1  | 	ssl.key.password = null
simulation_1-database-restoration-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-database-restoration-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.key = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.location = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.password = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.type = JKS
simulation_1-database-restoration-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-database-restoration-service-1  | 	ssl.provider = null
simulation_1-database-restoration-service-1  | 	ssl.secure.random.implementation = null
simulation_1-database-restoration-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-database-restoration-service-1  | 	ssl.truststore.certificates = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.location = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.password = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.type = JKS
simulation_1-database-restoration-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_1-database-restoration-service-1  | 
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:25 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_1-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_1-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_1-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_1-blueprint-service-1  | 	auto.offset.reset = latest
simulation_1-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-blueprint-service-1  | 	check.crcs = true
simulation_1-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-3
simulation_1-blueprint-service-1  | 	client.rack = 
simulation_1-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_1-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_1-blueprint-service-1  | 	enable.auto.commit = false
simulation_1-blueprint-service-1  | 	exclude.internal.topics = true
simulation_1-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_1-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_1-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_1-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_1-blueprint-service-1  | 	group.instance.id = null
simulation_1-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_1-blueprint-service-1  | 	interceptor.classes = []
simulation_1-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_1-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_1-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_1-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_1-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_1-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_1-blueprint-service-1  | 	max.poll.records = 500
simulation_1-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_1-blueprint-service-1  | 	metric.reporters = []
simulation_1-blueprint-service-1  | 	metrics.num.samples = 2
simulation_1-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_1-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_1-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_1-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_1-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_1-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.jaas.config = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.login.class = null
simulation_1-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_1-blueprint-service-1  | 	security.providers = null
simulation_1-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_1-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_1-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_1-blueprint-service-1  | 	ssl.key.password = null
simulation_1-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-blueprint-service-1  | 	ssl.keystore.key = null
simulation_1-blueprint-service-1  | 	ssl.keystore.location = null
simulation_1-blueprint-service-1  | 	ssl.keystore.password = null
simulation_1-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_1-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-blueprint-service-1  | 	ssl.provider = null
simulation_1-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_1-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_1-blueprint-service-1  | 	ssl.truststore.location = null
simulation_1-blueprint-service-1  | 	ssl.truststore.password = null
simulation_1-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_1-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_1-blueprint-service-1  | 
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.990Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.990Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 60e845626d8a465a
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.990Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1706471845990
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.990Z  INFO 1 --- [database-restoration-service] [           main] fkaConsumerFactory$ExtendedKafkaConsumer : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Subscribed to topic(s): metadata-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:25.997Z  INFO 1 --- [database-restoration-service] [           main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
simulation_1-database-restoration-service-1  | 	allow.auto.create.topics = true
simulation_1-database-restoration-service-1  | 	auto.commit.interval.ms = 5000
simulation_1-database-restoration-service-1  | 	auto.include.jmx.reporter = true
simulation_1-database-restoration-service-1  | 	auto.offset.reset = latest
simulation_1-database-restoration-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-database-restoration-service-1  | 	check.crcs = true
simulation_1-database-restoration-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-database-restoration-service-1  | 	client.id = consumer-database-restoration-service-group-3
simulation_1-database-restoration-service-1  | 	client.rack = 
simulation_1-database-restoration-service-1  | 	connections.max.idle.ms = 540000
simulation_1-database-restoration-service-1  | 	default.api.timeout.ms = 60000
simulation_1-database-restoration-service-1  | 	enable.auto.commit = false
simulation_1-database-restoration-service-1  | 	exclude.internal.topics = true
simulation_1-database-restoration-service-1  | 	fetch.max.bytes = 52428800
simulation_1-database-restoration-service-1  | 	fetch.max.wait.ms = 500
simulation_1-database-restoration-service-1  | 	fetch.min.bytes = 1
simulation_1-database-restoration-service-1  | 	group.id = database-restoration-service-group
simulation_1-database-restoration-service-1  | 	group.instance.id = null
simulation_1-database-restoration-service-1  | 	heartbeat.interval.ms = 3000
simulation_1-database-restoration-service-1  | 	interceptor.classes = []
simulation_1-database-restoration-service-1  | 	internal.leave.group.on.close = true
simulation_1-database-restoration-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_1-database-restoration-service-1  | 	isolation.level = read_uncommitted
simulation_1-database-restoration-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_1-database-restoration-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_1-database-restoration-service-1  | 	max.poll.interval.ms = 90000
simulation_1-database-restoration-service-1  | 	max.poll.records = 500
simulation_1-database-restoration-service-1  | 	metadata.max.age.ms = 300000
simulation_1-database-restoration-service-1  | 	metric.reporters = []
simulation_1-database-restoration-service-1  | 	metrics.num.samples = 2
simulation_1-database-restoration-service-1  | 	metrics.recording.level = INFO
simulation_1-database-restoration-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-database-restoration-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_1-database-restoration-service-1  | 	receive.buffer.bytes = 65536
simulation_1-database-restoration-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-database-restoration-service-1  | 	reconnect.backoff.ms = 50
simulation_1-database-restoration-service-1  | 	request.timeout.ms = 30000
simulation_1-database-restoration-service-1  | 	retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.jaas.config = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-database-restoration-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-database-restoration-service-1  | 	sasl.kerberos.service.name = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-database-restoration-service-1  | 	security.protocol = PLAINTEXT
simulation_1-database-restoration-service-1  | 	security.providers = null
simulation_1-database-restoration-service-1  | 	send.buffer.bytes = 131072
simulation_1-database-restoration-service-1  | 	session.timeout.ms = 45000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-database-restoration-service-1  | 	ssl.cipher.suites = null
simulation_1-database-restoration-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-database-restoration-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-database-restoration-service-1  | 	ssl.engine.factory.class = null
simulation_1-database-restoration-service-1  | 	ssl.key.password = null
simulation_1-database-restoration-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-database-restoration-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.key = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.location = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.password = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.type = JKS
simulation_1-database-restoration-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-database-restoration-service-1  | 	ssl.provider = null
simulation_1-database-restoration-service-1  | 	ssl.secure.random.implementation = null
simulation_1-database-restoration-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-database-restoration-service-1  | 	ssl.truststore.certificates = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.location = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.password = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.type = JKS
simulation_1-database-restoration-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_1-database-restoration-service-1  | 
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.008Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.009Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 60e845626d8a465a
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.009Z  INFO 1 --- [database-restoration-service] [           main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1706471846008
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.009Z  INFO 1 --- [database-restoration-service] [           main] fkaConsumerFactory$ExtendedKafkaConsumer : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Subscribed to topic(s): created-worksheet
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Error while fetching metadata with correlation id 2 : {metadata-failure=LEADER_NOT_AVAILABLE}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706471846017
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Subscribed to topic(s): restore-success
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
simulation_1-blueprint-service-1  | 	allow.auto.create.topics = true
simulation_1-blueprint-service-1  | 	auto.commit.interval.ms = 5000
simulation_1-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_1-blueprint-service-1  | 	auto.offset.reset = latest
simulation_1-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-blueprint-service-1  | 	check.crcs = true
simulation_1-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-blueprint-service-1  | 	client.id = consumer-blueprint-service-group-4
simulation_1-blueprint-service-1  | 	client.rack = 
simulation_1-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_1-blueprint-service-1  | 	default.api.timeout.ms = 60000
simulation_1-blueprint-service-1  | 	enable.auto.commit = false
simulation_1-blueprint-service-1  | 	exclude.internal.topics = true
simulation_1-blueprint-service-1  | 	fetch.max.bytes = 52428800
simulation_1-blueprint-service-1  | 	fetch.max.wait.ms = 500
simulation_1-blueprint-service-1  | 	fetch.min.bytes = 1
simulation_1-blueprint-service-1  | 	group.id = blueprint-service-group
simulation_1-blueprint-service-1  | 	group.instance.id = null
simulation_1-blueprint-service-1  | 	heartbeat.interval.ms = 3000
simulation_1-blueprint-service-1  | 	interceptor.classes = []
simulation_1-blueprint-service-1  | 	internal.leave.group.on.close = true
simulation_1-blueprint-service-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
simulation_1-blueprint-service-1  | 	isolation.level = read_uncommitted
simulation_1-blueprint-service-1  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
simulation_1-blueprint-service-1  | 	max.partition.fetch.bytes = 1048576
simulation_1-blueprint-service-1  | 	max.poll.interval.ms = 90000
simulation_1-blueprint-service-1  | 	max.poll.records = 500
simulation_1-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_1-blueprint-service-1  | 	metric.reporters = []
simulation_1-blueprint-service-1  | 	metrics.num.samples = 2
simulation_1-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_1-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-blueprint-service-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
simulation_1-blueprint-service-1  | 	receive.buffer.bytes = 65536
simulation_1-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_1-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_1-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.jaas.config = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.login.class = null
simulation_1-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_1-blueprint-service-1  | 	security.providers = null
simulation_1-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_1-blueprint-service-1  | 	session.timeout.ms = 45000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_1-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_1-blueprint-service-1  | 	ssl.key.password = null
simulation_1-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-blueprint-service-1  | 	ssl.keystore.key = null
simulation_1-blueprint-service-1  | 	ssl.keystore.location = null
simulation_1-blueprint-service-1  | 	ssl.keystore.password = null
simulation_1-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_1-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-blueprint-service-1  | 	ssl.provider = null
simulation_1-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_1-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_1-blueprint-service-1  | 	ssl.truststore.location = null
simulation_1-blueprint-service-1  | 	ssl.truststore.password = null
simulation_1-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_1-blueprint-service-1  | 	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer
simulation_1-blueprint-service-1  | 
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Error while fetching metadata with correlation id 2 : {metadata-success=LEADER_NOT_AVAILABLE}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706471846050
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] o.s.k.c.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Subscribed to topic(s): restore-failure
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.101Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.101Z  WARN 1 --- [database-restoration-service] [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Error while fetching metadata with correlation id 2 : {metadata-failure=LEADER_NOT_AVAILABLE}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.101Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.190Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:26 [main] c.w.a.b.BlueprintServiceApplication - Started BlueprintServiceApplication in 42.973 seconds (process running for 45.206)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:26.213Z  INFO 1 --- [database-restoration-service] [           main] .d.DatabaseRestorationServiceApplication : Started DatabaseRestorationServiceApplication in 39.842 seconds (process running for 44.364)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] (Re-)joining group
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] (Re-)joining group
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] (Re-)joining group
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] (Re-)joining group
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.204Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.207Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] (Re-)joining group
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.224Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.235Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] (Re-)joining group
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.245Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Discovered group coordinator kafka:9093 (id: 2147482646 rack: null)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.246Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] (Re-)joining group
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-4-0ae3d0e3-6464-4811-a5d4-f8b11f1bc416
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] (Re-)joining group
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-3-c4b210df-a9af-45b0-8706-f203ca25700c
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] (Re-)joining group
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-2-6eb747be-315c-42ec-900d-353d587734f5
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] (Re-)joining group
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.268Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Request joining group due to: need to re-join with the given member-id: consumer-database-restoration-service-group-2-0e89b04b-509d-492c-a894-4c8e787dbf68
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.268Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Request joining group due to: need to re-join with the given member-id: consumer-database-restoration-service-group-3-d365321f-15bb-4038-b472-6ed9ce25bbb5
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.268Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.268Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] (Re-)joining group
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.272Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.272Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] (Re-)joining group
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.272Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Request joining group due to: need to re-join with the given member-id: consumer-database-restoration-service-group-1-0c2cc74d-e32e-4586-ab15-45f5abc088db
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.273Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.273Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] (Re-)joining group
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Request joining group due to: need to re-join with the given member-id: consumer-blueprint-service-group-1-244fc02e-46f1-42c0-ad04-d160ea323981
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] (Re-)joining group
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.317Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-database-restoration-service-group-3-d365321f-15bb-4038-b472-6ed9ce25bbb5', protocol='range'}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.328Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-database-restoration-service-group-2-0e89b04b-509d-492c-a894-4c8e787dbf68', protocol='range'}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.332Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-database-restoration-service-group-1-0c2cc74d-e32e-4586-ab15-45f5abc088db', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-blueprint-service-group-1-244fc02e-46f1-42c0-ad04-d160ea323981', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-blueprint-service-group-4-0ae3d0e3-6464-4811-a5d4-f8b11f1bc416', protocol='range'}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.350Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Finished assignment for group at generation 1: {consumer-database-restoration-service-group-3-d365321f-15bb-4038-b472-6ed9ce25bbb5=Assignment(partitions=[created-worksheet-0]), consumer-database-restoration-service-group-1-0c2cc74d-e32e-4586-ab15-45f5abc088db=Assignment(partitions=[created-blueprint-0]), consumer-database-restoration-service-group-2-0e89b04b-509d-492c-a894-4c8e787dbf68=Assignment(partitions=[metadata-failure-0])}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-blueprint-service-group-2-6eb747be-315c-42ec-900d-353d587734f5', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Finished assignment for group at generation 1: {consumer-blueprint-service-group-1-244fc02e-46f1-42c0-ad04-d160ea323981=Assignment(partitions=[metadata-success-0]), consumer-blueprint-service-group-2-6eb747be-315c-42ec-900d-353d587734f5=Assignment(partitions=[metadata-failure-0]), consumer-blueprint-service-group-3-c4b210df-a9af-45b0-8706-f203ca25700c=Assignment(partitions=[restore-success-0]), consumer-blueprint-service-group-4-0ae3d0e3-6464-4811-a5d4-f8b11f1bc416=Assignment(partitions=[restore-failure-0])}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-blueprint-service-group-3-c4b210df-a9af-45b0-8706-f203ca25700c', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-blueprint-service-group-1-244fc02e-46f1-42c0-ad04-d160ea323981', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-blueprint-service-group-2-6eb747be-315c-42ec-900d-353d587734f5', protocol='range'}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.483Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-database-restoration-service-group-3-d365321f-15bb-4038-b472-6ed9ce25bbb5', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[metadata-failure-0])
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.483Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-database-restoration-service-group-2-0e89b04b-509d-492c-a894-4c8e787dbf68', protocol='range'}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.483Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Notifying assignor about the new Assignment(partitions=[created-worksheet-0])
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[metadata-success-0])
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Adding newly assigned partitions: metadata-failure-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Adding newly assigned partitions: metadata-success-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.486Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Adding newly assigned partitions: created-worksheet-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-blueprint-service-group-3-c4b210df-a9af-45b0-8706-f203ca25700c', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[restore-success-0])
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Adding newly assigned partitions: restore-success-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.488Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-database-restoration-service-group-1-0c2cc74d-e32e-4586-ab15-45f5abc088db', protocol='range'}
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.488Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Notifying assignor about the new Assignment(partitions=[created-blueprint-0])
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.488Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Adding newly assigned partitions: created-blueprint-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.483Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Notifying assignor about the new Assignment(partitions=[metadata-failure-0])
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.490Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Adding newly assigned partitions: metadata-failure-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-blueprint-service-group-4-0ae3d0e3-6464-4811-a5d4-f8b11f1bc416', protocol='range'}
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Notifying assignor about the new Assignment(partitions=[restore-failure-0])
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Adding newly assigned partitions: restore-failure-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.494Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Found no committed offset for partition created-blueprint-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Found no committed offset for partition metadata-failure-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.495Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Found no committed offset for partition created-worksheet-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.497Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Found no committed offset for partition metadata-failure-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.499Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Found no committed offset for partition created-blueprint-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Found no committed offset for partition restore-failure-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Found no committed offset for partition metadata-success-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.502Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Found no committed offset for partition created-worksheet-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Found no committed offset for partition restore-success-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.502Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Found no committed offset for partition metadata-failure-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Found no committed offset for partition restore-success-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Found no committed offset for partition metadata-success-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Found no committed offset for partition metadata-failure-0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Found no committed offset for partition restore-failure-0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.519Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-database-restoration-service-group-2, groupId=database-restoration-service-group] Resetting offset for partition metadata-failure-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.520Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-database-restoration-service-group-3, groupId=database-restoration-service-group] Resetting offset for partition created-worksheet-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-1, groupId=blueprint-service-group] Resetting offset for partition metadata-success-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-2, groupId=blueprint-service-group] Resetting offset for partition metadata-failure-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.521Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.c.c.internals.SubscriptionState    : [Consumer clientId=consumer-database-restoration-service-group-1, groupId=database-restoration-service-group] Resetting offset for partition created-blueprint-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-3, groupId=blueprint-service-group] Resetting offset for partition restore-success-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-blueprint-service-group-4, groupId=blueprint-service-group] Resetting offset for partition restore-failure-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9093 (id: 1001 rack: null)], epoch=0}}.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.542Z  INFO 1 --- [database-restoration-service] [ntainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : database-restoration-service-group: partitions assigned: [metadata-failure-0]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [restore-failure-0]
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.563Z  INFO 1 --- [database-restoration-service] [ntainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : database-restoration-service-group: partitions assigned: [created-worksheet-0]
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:27.568Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : database-restoration-service-group: partitions assigned: [created-blueprint-0]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [restore-success-0]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [metadata-failure-0]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:27 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] o.s.k.l.KafkaMessageListenerContainer - blueprint-service-group: partitions assigned: [metadata-success-0]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:28 [http-nio-8100-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:28 [http-nio-8100-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:28 [http-nio-8100-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-28T19:27:30.017422216
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:43 [http-nio-8100-exec-4] c.w.a.logging.LoggingFilter - -----> Request: POST /api/v1/importing/start, headers=[user-agent:"curl/8.1.2", accept:"*/*", content-length:"3584", forwarded:"proto=http;host="localhost:8080";for="192.168.112.1:34888"", x-forwarded-for:"192.168.112.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"c9c3d03b94db:8100", Content-Type:"multipart/form-data;boundary=------------------------653d8b4b8d5f9c3e;charset=UTF-8"]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:43 [ForkJoinPool.commonPool-worker-1] c.w.a.b.a.o.p.d.DumpRepositoryS3Adapter - Uploading Dump to S3... Blueprint : Blueprint(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, dumpFile=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@571d6575, blueprintSagaStatus=INITIALISED, restoreMode=SCRIPT, databaseType=POSTGRESQL, title=Employees, dumpStoreSuccess=false, description=This is just a sample dump of employees database made in a SCRIPT mode., createdDate=2024-01-28T19:57:43.398315722, originalDumpName=employeesdb_script.sql)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:43 [http-nio-8100-exec-4] c.w.a.logging.LoggingFilter - <----- Response (HTTP 202 Accepted): 81c8d4ab-1b2d-4409-a079-da02b538e038
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:43 [http-nio-8100-exec-6] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=81c8d4ab-1b2d-4409-a079-da02b538e038, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="192.168.112.1:34896"", x-forwarded-for:"192.168.112.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"c9c3d03b94db:8100", content-length:"0"]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:43 [http-nio-8100-exec-6] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
simulation_1-blueprint-service-1  | {
simulation_1-blueprint-service-1  |   "blueprintId" : "81c8d4ab-1b2d-4409-a079-da02b538e038",
simulation_1-blueprint-service-1  |   "blueprintSagaStatus" : "INITIALISED",
simulation_1-blueprint-service-1  |   "restoreMode" : "SCRIPT",
simulation_1-blueprint-service-1  |   "databaseType" : "POSTGRESQL",
simulation_1-blueprint-service-1  |   "title" : "Employees",
simulation_1-blueprint-service-1  |   "dumpStoreSuccess" : false,
simulation_1-blueprint-service-1  |   "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
simulation_1-blueprint-service-1  |   "createdDate" : "2024-01-28T19:57:43.398",
simulation_1-blueprint-service-1  |   "originalDumpName" : "employeesdb_script.sql"
simulation_1-blueprint-service-1  | }
simulation_1-blueprint-service-1  | [31mWARN [0;39m 2024-01-28 19:57:43 [ForkJoinPool.commonPool-worker-1] s.a.a.h.a.internal.utils.ApacheUtils - NoSuchMethodException was thrown when disabling normalizeUri. This indicates you are using an old version (< 4.5.8) of Apache http client. It is recommended to use http client version >= 4.5.9 to avoid the breaking change introduced in apache client 4.5.7 and the latency in exception handling. See https://github.com/aws/aws-sdk-java/issues/1919 for more information
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [ForkJoinPool.commonPool-worker-1] c.w.a.s.impl.LoggingKafkaTemplate - Publishing to Kafka | Topic: created-blueprint | Value: BlueprintCreatedEvent(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, restoreMode=SCRIPT)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [ForkJoinPool.commonPool-worker-1] o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
simulation_1-blueprint-service-1  | 	acks = -1
simulation_1-blueprint-service-1  | 	auto.include.jmx.reporter = true
simulation_1-blueprint-service-1  | 	batch.size = 16384
simulation_1-blueprint-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-blueprint-service-1  | 	buffer.memory = 33554432
simulation_1-blueprint-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-blueprint-service-1  | 	client.id = producer-1
simulation_1-blueprint-service-1  | 	compression.type = none
simulation_1-blueprint-service-1  | 	connections.max.idle.ms = 540000
simulation_1-blueprint-service-1  | 	delivery.timeout.ms = 120000
simulation_1-blueprint-service-1  | 	enable.idempotence = true
simulation_1-blueprint-service-1  | 	interceptor.classes = []
simulation_1-blueprint-service-1  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
simulation_1-blueprint-service-1  | 	linger.ms = 0
simulation_1-blueprint-service-1  | 	max.block.ms = 60000
simulation_1-blueprint-service-1  | 	max.in.flight.requests.per.connection = 5
simulation_1-blueprint-service-1  | 	max.request.size = 1048576
simulation_1-blueprint-service-1  | 	metadata.max.age.ms = 300000
simulation_1-blueprint-service-1  | 	metadata.max.idle.ms = 300000
simulation_1-blueprint-service-1  | 	metric.reporters = []
simulation_1-blueprint-service-1  | 	metrics.num.samples = 2
simulation_1-blueprint-service-1  | 	metrics.recording.level = INFO
simulation_1-blueprint-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-blueprint-service-1  | 	partitioner.adaptive.partitioning.enable = true
simulation_1-blueprint-service-1  | 	partitioner.availability.timeout.ms = 0
simulation_1-blueprint-service-1  | 	partitioner.class = null
simulation_1-blueprint-service-1  | 	partitioner.ignore.keys = false
simulation_1-blueprint-service-1  | 	receive.buffer.bytes = 32768
simulation_1-blueprint-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-blueprint-service-1  | 	reconnect.backoff.ms = 50
simulation_1-blueprint-service-1  | 	request.timeout.ms = 30000
simulation_1-blueprint-service-1  | 	retries = 2147483647
simulation_1-blueprint-service-1  | 	retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.jaas.config = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-blueprint-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-blueprint-service-1  | 	sasl.kerberos.service.name = null
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-blueprint-service-1  | 	sasl.login.class = null
simulation_1-blueprint-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-blueprint-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-blueprint-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-blueprint-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-blueprint-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-blueprint-service-1  | 	security.protocol = PLAINTEXT
simulation_1-blueprint-service-1  | 	security.providers = null
simulation_1-blueprint-service-1  | 	send.buffer.bytes = 131072
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-blueprint-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-blueprint-service-1  | 	ssl.cipher.suites = null
simulation_1-blueprint-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-blueprint-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-blueprint-service-1  | 	ssl.engine.factory.class = null
simulation_1-blueprint-service-1  | 	ssl.key.password = null
simulation_1-blueprint-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-blueprint-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-blueprint-service-1  | 	ssl.keystore.key = null
simulation_1-blueprint-service-1  | 	ssl.keystore.location = null
simulation_1-blueprint-service-1  | 	ssl.keystore.password = null
simulation_1-blueprint-service-1  | 	ssl.keystore.type = JKS
simulation_1-blueprint-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-blueprint-service-1  | 	ssl.provider = null
simulation_1-blueprint-service-1  | 	ssl.secure.random.implementation = null
simulation_1-blueprint-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-blueprint-service-1  | 	ssl.truststore.certificates = null
simulation_1-blueprint-service-1  | 	ssl.truststore.location = null
simulation_1-blueprint-service-1  | 	ssl.truststore.password = null
simulation_1-blueprint-service-1  | 	ssl.truststore.type = JKS
simulation_1-blueprint-service-1  | 	transaction.timeout.ms = 60000
simulation_1-blueprint-service-1  | 	transactional.id = null
simulation_1-blueprint-service-1  | 	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
simulation_1-blueprint-service-1  | 
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [ForkJoinPool.commonPool-worker-1] o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [ForkJoinPool.commonPool-worker-1] o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.6.0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [ForkJoinPool.commonPool-worker-1] o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 60e845626d8a465a
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [ForkJoinPool.commonPool-worker-1] o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1706471864175
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [kafka-producer-network-thread | producer-1] o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.307Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] .a.d.a.i.m.BlueprintCreatedKafkaListener : Received BlueprintCreatedEvent(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, restoreMode=SCRIPT)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.309Z ERROR 1 --- [database-restoration-service] [ntainer#2-0-C-1] c.w.a.d.d.s.m.BlueprintCreatedService    : Error during database restoration for event : BlueprintCreatedEvent(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, restoreMode=SCRIPT)
simulation_1-database-restoration-service-1  | 
simulation_1-database-restoration-service-1  | java.lang.RuntimeException: Simulating failure during database restoration operation
simulation_1-database-restoration-service-1  | 	at com.wenox.anonymization.database_restoration_service.domain.service.restoration_lifecycle.DefaultRestorationLifecycleService.restore(DefaultRestorationLifecycleService.java:23) ~[!/:simulation-1]
simulation_1-database-restoration-service-1  | 	at com.wenox.anonymization.database_restoration_service.domain.service.messaging.BlueprintCreatedService.handle(BlueprintCreatedService.java:22) ~[!/:simulation-1]
simulation_1-database-restoration-service-1  | 	at com.wenox.anonymization.database_restoration_service.adapters.inbound.messaging.BlueprintCreatedKafkaListener.onBlueprintCreated(BlueprintCreatedKafkaListener.java:22) ~[!/:simulation-1]
simulation_1-database-restoration-service-1  | 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
simulation_1-database-restoration-service-1  | 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
simulation_1-database-restoration-service-1  | 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
simulation_1-database-restoration-service-1  | 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
simulation_1-database-restoration-service-1  | 	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169) ~[spring-messaging-6.1.1.jar!/:6.1.1]
simulation_1-database-restoration-service-1  | 	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119) ~[spring-messaging-6.1.1.jar!/:6.1.1]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:375) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2857) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2835) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$56(KafkaMessageListenerContainer.java:2753) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at io.micrometer.observation.Observation.observe(Observation.java:565) ~[micrometer-observation-1.12.0.jar!/:1.12.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2751) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2604) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2490) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2132) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1487) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1451) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1322) ~[spring-kafka-3.1.0.jar!/:3.1.0]
simulation_1-database-restoration-service-1  | 	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
simulation_1-database-restoration-service-1  | 	at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]
simulation_1-database-restoration-service-1  | 
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.455Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] c.w.a.s.impl.LoggingKafkaTemplate        : Publishing to Kafka | Topic: restore-failure | Value: DatabaseRestoredFailureEvent(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, errorMessage=Simulating failure during database restoration operation, exception=java.lang.RuntimeException: Simulating failure during database restoration operation)
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.460Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
simulation_1-database-restoration-service-1  | 	acks = -1
simulation_1-database-restoration-service-1  | 	auto.include.jmx.reporter = true
simulation_1-database-restoration-service-1  | 	batch.size = 16384
simulation_1-database-restoration-service-1  | 	bootstrap.servers = [kafka:9093]
simulation_1-database-restoration-service-1  | 	buffer.memory = 33554432
simulation_1-database-restoration-service-1  | 	client.dns.lookup = use_all_dns_ips
simulation_1-database-restoration-service-1  | 	client.id = producer-1
simulation_1-database-restoration-service-1  | 	compression.type = none
simulation_1-database-restoration-service-1  | 	connections.max.idle.ms = 540000
simulation_1-database-restoration-service-1  | 	delivery.timeout.ms = 120000
simulation_1-database-restoration-service-1  | 	enable.idempotence = true
simulation_1-database-restoration-service-1  | 	interceptor.classes = []
simulation_1-database-restoration-service-1  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
simulation_1-database-restoration-service-1  | 	linger.ms = 0
simulation_1-database-restoration-service-1  | 	max.block.ms = 60000
simulation_1-database-restoration-service-1  | 	max.in.flight.requests.per.connection = 5
simulation_1-database-restoration-service-1  | 	max.request.size = 1048576
simulation_1-database-restoration-service-1  | 	metadata.max.age.ms = 300000
simulation_1-database-restoration-service-1  | 	metadata.max.idle.ms = 300000
simulation_1-database-restoration-service-1  | 	metric.reporters = []
simulation_1-database-restoration-service-1  | 	metrics.num.samples = 2
simulation_1-database-restoration-service-1  | 	metrics.recording.level = INFO
simulation_1-database-restoration-service-1  | 	metrics.sample.window.ms = 30000
simulation_1-database-restoration-service-1  | 	partitioner.adaptive.partitioning.enable = true
simulation_1-database-restoration-service-1  | 	partitioner.availability.timeout.ms = 0
simulation_1-database-restoration-service-1  | 	partitioner.class = null
simulation_1-database-restoration-service-1  | 	partitioner.ignore.keys = false
simulation_1-database-restoration-service-1  | 	receive.buffer.bytes = 32768
simulation_1-database-restoration-service-1  | 	reconnect.backoff.max.ms = 1000
simulation_1-database-restoration-service-1  | 	reconnect.backoff.ms = 50
simulation_1-database-restoration-service-1  | 	request.timeout.ms = 30000
simulation_1-database-restoration-service-1  | 	retries = 2147483647
simulation_1-database-restoration-service-1  | 	retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.client.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.jaas.config = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
simulation_1-database-restoration-service-1  | 	sasl.kerberos.min.time.before.relogin = 60000
simulation_1-database-restoration-service-1  | 	sasl.kerberos.service.name = null
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.callback.handler.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.class = null
simulation_1-database-restoration-service-1  | 	sasl.login.connect.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.read.timeout.ms = null
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.buffer.seconds = 300
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.min.period.seconds = 60
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.factor = 0.8
simulation_1-database-restoration-service-1  | 	sasl.login.refresh.window.jitter = 0.05
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.login.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.mechanism = GSSAPI
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.audience = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.expected.issuer = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.scope.claim.name = scope
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.sub.claim.name = sub
simulation_1-database-restoration-service-1  | 	sasl.oauthbearer.token.endpoint.url = null
simulation_1-database-restoration-service-1  | 	security.protocol = PLAINTEXT
simulation_1-database-restoration-service-1  | 	security.providers = null
simulation_1-database-restoration-service-1  | 	send.buffer.bytes = 131072
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.max.ms = 30000
simulation_1-database-restoration-service-1  | 	socket.connection.setup.timeout.ms = 10000
simulation_1-database-restoration-service-1  | 	ssl.cipher.suites = null
simulation_1-database-restoration-service-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
simulation_1-database-restoration-service-1  | 	ssl.endpoint.identification.algorithm = https
simulation_1-database-restoration-service-1  | 	ssl.engine.factory.class = null
simulation_1-database-restoration-service-1  | 	ssl.key.password = null
simulation_1-database-restoration-service-1  | 	ssl.keymanager.algorithm = SunX509
simulation_1-database-restoration-service-1  | 	ssl.keystore.certificate.chain = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.key = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.location = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.password = null
simulation_1-database-restoration-service-1  | 	ssl.keystore.type = JKS
simulation_1-database-restoration-service-1  | 	ssl.protocol = TLSv1.3
simulation_1-database-restoration-service-1  | 	ssl.provider = null
simulation_1-database-restoration-service-1  | 	ssl.secure.random.implementation = null
simulation_1-database-restoration-service-1  | 	ssl.trustmanager.algorithm = PKIX
simulation_1-database-restoration-service-1  | 	ssl.truststore.certificates = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.location = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.password = null
simulation_1-database-restoration-service-1  | 	ssl.truststore.type = JKS
simulation_1-database-restoration-service-1  | 	transaction.timeout.ms = 60000
simulation_1-database-restoration-service-1  | 	transactional.id = null
simulation_1-database-restoration-service-1  | 	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer
simulation_1-database-restoration-service-1  | 
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.467Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.475Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.6.0
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.475Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 60e845626d8a465a
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.475Z  INFO 1 --- [database-restoration-service] [ntainer#2-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1706471864475
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.480Z  INFO 1 --- [database-restoration-service] [ad | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: xgf4s13aTGaDdO610BQOGQ
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:44.480Z  INFO 1 --- [database-restoration-service] [ad | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.w.a.b.a.i.m.DatabaseRestoredKafkaListener - -----> Started compensating transaction: delete file from s3,  DatabaseRestoredFailureEvent(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, errorMessage=Simulating failure during database restoration operation, exception=java.lang.Exception: Simulating failure during database restoration operation)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.w.a.b.a.o.p.d.DumpRepositoryS3Adapter - Deleting Dump from S3... Blueprint ID : 81c8d4ab-1b2d-4409-a079-da02b538e038
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.w.a.b.d.s.BlueprintSagaStatusUpdater - Updated status to RESTORE_FAILURE of blueprint: Blueprint(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, dumpFile=null, blueprintSagaStatus=RESTORE_FAILURE, restoreMode=SCRIPT, databaseType=POSTGRESQL, title=Employees, dumpStoreSuccess=true, description=This is just a sample dump of employees database made in a SCRIPT mode., createdDate=2024-01-28T19:57:43.398, originalDumpName=employeesdb_script.sql)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] c.w.a.b.a.i.m.DatabaseRestoredKafkaListener - <----- Finished compensating transaction, delete file from s3, DatabaseRestoredFailureEvent(blueprintId=81c8d4ab-1b2d-4409-a079-da02b538e038, errorMessage=Simulating failure during database restoration operation, exception=java.lang.Exception: Simulating failure during database restoration operation)
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [http-nio-8100-exec-8] c.w.a.logging.LoggingFilter - -----> Request: GET /api/v1/blueprints?blueprint_id=81c8d4ab-1b2d-4409-a079-da02b538e038, headers=[user-agent:"curl/8.1.2", accept:"*/*", forwarded:"proto=http;host="localhost:8080";for="192.168.112.1:34912"", x-forwarded-for:"192.168.112.1", x-forwarded-proto:"http", x-forwarded-port:"8080", x-forwarded-host:"localhost:8080", host:"c9c3d03b94db:8100", content-length:"0"]
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:44 [http-nio-8100-exec-8] c.w.a.logging.LoggingFilter - <----- Response (HTTP 200 OK):
simulation_1-blueprint-service-1  | {
simulation_1-blueprint-service-1  |   "blueprintId" : "81c8d4ab-1b2d-4409-a079-da02b538e038",
simulation_1-blueprint-service-1  |   "blueprintSagaStatus" : "RESTORE_FAILURE",
simulation_1-blueprint-service-1  |   "restoreMode" : "SCRIPT",
simulation_1-blueprint-service-1  |   "databaseType" : "POSTGRESQL",
simulation_1-blueprint-service-1  |   "title" : "Employees",
simulation_1-blueprint-service-1  |   "dumpStoreSuccess" : true,
simulation_1-blueprint-service-1  |   "description" : "This is just a sample dump of employees database made in a SCRIPT mode.",
simulation_1-blueprint-service-1  |   "createdDate" : "2024-01-28T19:57:43.398",
simulation_1-blueprint-service-1  |   "originalDumpName" : "employeesdb_script.sql"
simulation_1-blueprint-service-1  | }
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - Disable delta property : false
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - Application is null : false
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - Application version is -1: false
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:57:55 [DiscoveryClient-CacheRefreshExecutor-0] c.netflix.discovery.DiscoveryClient - The response status is 200
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.398Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.399Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.399Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.399Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.399Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.399Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.399Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
simulation_1-database-restoration-service-1  | 2024-01-28T19:57:55.487Z  INFO 1 --- [database-restoration-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:58:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:58:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-28T19:28:00.004384382
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:58:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:58:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-28T19:28:30.008924591
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:59:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:59:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-28T19:29:00.033430174
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:59:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 19:59:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-28T19:29:30.003218716
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 20:00:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 20:00:00 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-28T19:30:00.020174924
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 20:00:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation started...
simulation_1-blueprint-service-1  | [34mINFO [0;39m 2024-01-28 20:00:30 [scheduling-1] c.w.a.b.d.s.StaleBlueprintReconciliationService - Stale blueprints reconciliation ended. Reconciled blueprints : [] before time : 2024-01-28T19:30:30.006771091
